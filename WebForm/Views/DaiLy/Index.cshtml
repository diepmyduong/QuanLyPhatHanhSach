@using PagedList;
@using PagedList.Mvc;
@model PagedList.IPagedList<Core.BIZ.DaiLy>

@{
    ViewBag.Title = "Danh mục Đại lý";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    @section AddToHead{
        <link href="@Url.Content("~/Content/JQueryUI/jquery-ui.min.css")" rel="stylesheet" type="text/css" />
    }
    @section AddToFooter{
        <script src="@Url.Content("~/Content/JQueryUI/jquery-ui.min.js")"></script>
        <script>
            $(function() {
            var availableTags = []
            function getAutoCompleteSource(request) {
                $.getJSON('@Url.Action("GetProperties")',{ request : request}, function (data) {
                    availableTags = data;
                });
            }
            function split( val ) {
              return val.split( /{\s*/ );
            }
            function extractLast( term ) {
              return split( term ).pop();
            }
            
            $( "#search" )
              // don't navigate away from the field on tab when selecting an item
              .bind( "keydown", function( event ) {
                if ( event.keyCode === $.ui.keyCode.TAB &&
                    $( this ).autocomplete( "instance" ).menu.active ) {
                  event.preventDefault();
                }
                if (event.shiftKey && event.keyCode == 219) {
                    getAutoCompleteSource($(this).val()+"{");
                }
              })
              .autocomplete({
                minLength: 0,
                source: function( request, response ) {
                    // delegate back to autocomplete, but extract the last term
                  response( $.ui.autocomplete.filter(
                    availableTags, extractLast( request.term ) ) );
                  console.log($.ui.autocomplete.filter(
                    availableTags, extractLast( request.term ) ));
                },
                focus: function() {
                  // prevent value inserted on focus
                  return true;
                },
                select: function( event, ui ) {
                  return false;
                }
              });
          });
        </script>
    }
}

<h2>@ViewBag.Title</h2>

<p>
    @Html.ActionLink("Thêm Đại lý", "Create")
</p>
<hr />
@using (Html.BeginForm("Index", "DaiLy", FormMethod.Get, new { @class = "form" }))
{
    @Html.ValidationSummary(true)
    <div class="row ">
        <div class="col-md-10 form-group input-group">
            <input type="search" name="search" id="search" class="form-control" 
                   value="@{if (ViewBag.SearchKey != null)
                            {
                                @ViewBag.SearchKey;
                            }
                            }"
                   required="required" title="">
            <span class="input-group-btn"><button class="btn btn-default" type="submit"><i class="fa fa-search"></i></button></span>
        </div>
    </div>
}
<table class="table">
    <tr>
        <th>
            @Core.DAL.DaiLyManager.Properties.MaSoDaiLy
        </th>
        <th>
            @Core.DAL.DaiLyManager.Properties.TenDaiLy
        </th>
        <th>
            @Core.DAL.DaiLyManager.Properties.DiaChi
        </th>
        <th>
            @Core.DAL.DaiLyManager.Properties.SoDienThoai
        </th>
        <th>
            @Core.DAL.DaiLyManager.Properties.SoTaiKhoan
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.MaSoDaiLy)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TenDaiLy)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DiaChi)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SoDienThoai)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SoTaiKhoan)
        </td>
        <td>
            @Html.ActionLink("Sửa", "Edit", new { id = item.MaSoDaiLy }) |
            @Html.ActionLink("Chi tiết", "Details", new { id = item.MaSoDaiLy }) |
            @Html.ActionLink("Xóa", "Delete", new { id = item.MaSoDaiLy })
        </td>
    </tr>
}

</table>
<div class="row">
    <div class="col-md-4 col-md-offset-5">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = Model.PageSize, search = ViewBag.searchKey }), PagedListRenderOptions.OnlyShowFivePagesAtATime)
    </div>
</div>
<div class="row">
    <div class="col-md-4 col-md-offset-5">
        Showing @Model.FirstItemOnPage to @Model.LastItemOnPage of @Model.TotalItemCount Contents.
    </div>
</div>