<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Data.Linq.4.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.SystemDataLinqDelegates">
            <summary>Contains custom delegates used for the stubs and shims of System.Data.Linq</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimBinary">
            <summary>Shim type of System.Data.Linq.Binary</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimBinary.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimBinary.#ctor(System.Data.Linq.Binary)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimBinary.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimBinary.AllInstances.EqualsBinary">
            <summary>Sets the shim of Binary.Equals(Binary other)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimBinary.AllInstances.EqualsObject">
            <summary>Sets the shim of Binary.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimBinary.AllInstances.GetHashCode01">
            <summary>Sets the shim of Binary.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimBinary.AllInstances.LengthGet">
            <summary>Sets the shim of Binary.get_Length()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimBinary.AllInstances.ToArray">
            <summary>Sets the shim of Binary.ToArray()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimBinary.AllInstances.ToString01">
            <summary>Sets the shim of Binary.ToString()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimBinary.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimBinary.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimBinary.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimBinary.Bind(System.IEquatable{System.Data.Linq.Binary})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimBinary.ConstructorByteArray">
            <summary>Sets the shim of Binary.Binary(Byte[] value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimBinary.EqualityOpBinaryBinary">
            <summary>Sets the shim of Binary.op_Equality(Binary binary1, Binary binary2)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimBinary.EqualsBinary">
            <summary>Sets the shim of Binary.Equals(Binary other)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimBinary.EqualsObject">
            <summary>Sets the shim of Binary.Equals(Object obj)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimBinary.GetHashCode">
            <summary>Sets the shim of Binary.GetHashCode()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimBinary.ImplicitOpByteArrayBinary">
            <summary>Sets the shim of Binary.op_Implicit(Byte[] value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimBinary.InequalityOpBinaryBinary">
            <summary>Sets the shim of Binary.op_Inequality(Binary binary1, Binary binary2)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimBinary.LengthGet">
            <summary>Sets the shim of Binary.get_Length()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimBinary.ToArray">
            <summary>Sets the shim of Binary.ToArray()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimBinary.ToString">
            <summary>Sets the shim of Binary.ToString()</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimChangeConflictCollection">
            <summary>Shim type of System.Data.Linq.ChangeConflictCollection</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimChangeConflictCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimChangeConflictCollection.#ctor(System.Data.Linq.ChangeConflictCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimChangeConflictCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.AllInstances.Clear">
            <summary>Sets the shim of ChangeConflictCollection.Clear()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.AllInstances.ContainsObjectChangeConflict">
            <summary>Sets the shim of ChangeConflictCollection.Contains(ObjectChangeConflict item)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.AllInstances.CopyToObjectChangeConflictArrayInt32">
            <summary>Sets the shim of ChangeConflictCollection.CopyTo(ObjectChangeConflict[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.AllInstances.CountGet">
            <summary>Sets the shim of ChangeConflictCollection.get_Count()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.AllInstances.FillListOfObjectChangeConflict">
            <summary>Sets the shim of ChangeConflictCollection.Fill(List`1&lt;ObjectChangeConflict&gt; conflictList)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of ChangeConflictCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.AllInstances.IsReadOnlySystemCollectionsGenericICollectionSystemDataLinqObjectChangeConflictget">
            <summary>Sets the shim of ChangeConflictCollection.System.Collections.Generic.ICollection&lt;System.Data.Linq.ObjectChangeConflict&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of ChangeConflictCollection.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ChangeConflictCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.AllInstances.RemoveObjectChangeConflict">
            <summary>Sets the shim of ChangeConflictCollection.Remove(ObjectChangeConflict item)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.AllInstances.ResolveAllRefreshMode">
            <summary>Sets the shim of ChangeConflictCollection.ResolveAll(RefreshMode mode)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.AllInstances.ResolveAllRefreshModeBoolean">
            <summary>Sets the shim of ChangeConflictCollection.ResolveAll(RefreshMode mode, Boolean autoResolveDeletes)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of ChangeConflictCollection.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.AllInstances.SystemCollectionsGenericICollectionSystemDataLinqObjectChangeConflictAddObjectChangeConflict">
            <summary>Sets the shim of ChangeConflictCollection.System.Collections.Generic.ICollection&lt;System.Data.Linq.ObjectChangeConflict&gt;.Add(ObjectChangeConflict item)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of ChangeConflictCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ChangeConflictCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimChangeConflictCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimChangeConflictCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimChangeConflictCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimChangeConflictCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimChangeConflictCollection.Bind(System.Collections.Generic.ICollection{System.Data.Linq.ObjectChangeConflict})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimChangeConflictCollection.Bind(System.Collections.Generic.IEnumerable{System.Data.Linq.ObjectChangeConflict})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.Clear">
            <summary>Sets the shim of ChangeConflictCollection.Clear()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.Constructor">
            <summary>Sets the shim of ChangeConflictCollection.ChangeConflictCollection()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.ContainsObjectChangeConflict">
            <summary>Sets the shim of ChangeConflictCollection.Contains(ObjectChangeConflict item)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.CopyToObjectChangeConflictArrayInt32">
            <summary>Sets the shim of ChangeConflictCollection.CopyTo(ObjectChangeConflict[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.CountGet">
            <summary>Sets the shim of ChangeConflictCollection.get_Count()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.FillListOfObjectChangeConflict">
            <summary>Sets the shim of ChangeConflictCollection.Fill(List`1&lt;ObjectChangeConflict&gt; conflictList)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.GetEnumerator">
            <summary>Sets the shim of ChangeConflictCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.IsReadOnlySystemCollectionsGenericICollectionSystemDataLinqObjectChangeConflictget">
            <summary>Sets the shim of ChangeConflictCollection.System.Collections.Generic.ICollection&lt;System.Data.Linq.ObjectChangeConflict&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of ChangeConflictCollection.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.ItemGetInt32">
            <summary>Sets the shim of ChangeConflictCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.RemoveObjectChangeConflict">
            <summary>Sets the shim of ChangeConflictCollection.Remove(ObjectChangeConflict item)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.ResolveAllRefreshMode">
            <summary>Sets the shim of ChangeConflictCollection.ResolveAll(RefreshMode mode)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.ResolveAllRefreshModeBoolean">
            <summary>Sets the shim of ChangeConflictCollection.ResolveAll(RefreshMode mode, Boolean autoResolveDeletes)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of ChangeConflictCollection.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.SystemCollectionsGenericICollectionSystemDataLinqObjectChangeConflictAddObjectChangeConflict">
            <summary>Sets the shim of ChangeConflictCollection.System.Collections.Generic.ICollection&lt;System.Data.Linq.ObjectChangeConflict&gt;.Add(ObjectChangeConflict item)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of ChangeConflictCollection.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of ChangeConflictCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimChangeConflictException">
            <summary>Shim type of System.Data.Linq.ChangeConflictException</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimChangeConflictException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimChangeConflictException.#ctor(System.Data.Linq.ChangeConflictException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimChangeConflictException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimChangeConflictException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimChangeConflictException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimChangeConflictException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictException.Constructor">
            <summary>Sets the shim of ChangeConflictException.ChangeConflictException()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictException.ConstructorString">
            <summary>Sets the shim of ChangeConflictException.ChangeConflictException(String message)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeConflictException.ConstructorStringException">
            <summary>Sets the shim of ChangeConflictException.ChangeConflictException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimChangeSet">
            <summary>Shim type of System.Data.Linq.ChangeSet</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimChangeSet.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimChangeSet.#ctor(System.Data.Linq.ChangeSet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimChangeSet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeSet.AllInstances.DeletesGet">
            <summary>Sets the shim of ChangeSet.get_Deletes()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeSet.AllInstances.InsertsGet">
            <summary>Sets the shim of ChangeSet.get_Inserts()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeSet.AllInstances.ToString01">
            <summary>Sets the shim of ChangeSet.ToString()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeSet.AllInstances.UpdatesGet">
            <summary>Sets the shim of ChangeSet.get_Updates()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimChangeSet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimChangeSet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeSet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeSet.ConstructorReadOnlyCollectionOfObjectReadOnlyCollectionOfObjectReadOnlyCollectionOfObject">
            <summary>Sets the shim of ChangeSet.ChangeSet(ReadOnlyCollection`1&lt;Object&gt; inserts, ReadOnlyCollection`1&lt;Object&gt; deletes, ReadOnlyCollection`1&lt;Object&gt; updates)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeSet.DeletesGet">
            <summary>Sets the shim of ChangeSet.get_Deletes()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeSet.InsertsGet">
            <summary>Sets the shim of ChangeSet.get_Inserts()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeSet.ToString">
            <summary>Sets the shim of ChangeSet.ToString()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimChangeSet.UpdatesGet">
            <summary>Sets the shim of ChangeSet.get_Updates()</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimCompiledQuery">
            <summary>Shim type of System.Data.Linq.CompiledQuery</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimCompiledQuery.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimCompiledQuery.#ctor(System.Data.Linq.CompiledQuery)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimCompiledQuery.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimCompiledQuery.AllInstances.Constructor">
            <summary>Sets the shim of CompiledQuery.CompiledQuery()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimCompiledQuery.AllInstances.ExpressionGet">
            <summary>Sets the shim of CompiledQuery.get_Expression()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimCompiledQuery.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimCompiledQuery.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimCompiledQuery.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimCompiledQuery.CompileOf10ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8M9``10(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`10&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimCompiledQuery.CompileOf11ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8M9M10``11(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`11&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9,!!10&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimCompiledQuery.CompileOf12ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8M9M10M11``12(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`12&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9,!!10,!!11&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimCompiledQuery.CompileOf13ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8M9M10M11M12``13(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`13&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9,!!10,!!11,!!12&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimCompiledQuery.CompileOf14ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8M9M10M11M12M13``14(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`14&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9,!!10,!!11,!!12,!!13&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimCompiledQuery.CompileOf15ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8M9M10M11M12M13M14``15(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`15&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9,!!10,!!11,!!12,!!13,!!14&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimCompiledQuery.CompileOf16ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8M9M10M11M12M13M14M15``16(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`16&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9,!!10,!!11,!!12,!!13,!!14,!!15&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimCompiledQuery.CompileOf17ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8M9M10M11M12M13M14M15M16``17(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`17&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8,!!9,!!10,!!11,!!12,!!13,!!14,!!15,!!16&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimCompiledQuery.CompileOf2ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Func{``0,``1}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimCompiledQuery.CompileOf3ExpressionOfFuncOfM0M1M2``3(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2}},System.Func{``0,``1,``2}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`3&lt;!!0,!!1,!!2&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimCompiledQuery.CompileOf4ExpressionOfFuncOfM0M1M2M3``4(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}},System.Func{``0,``1,``2,``3}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`4&lt;!!0,!!1,!!2,!!3&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimCompiledQuery.CompileOf5ExpressionOfFuncOfM0M1M2M3M4``5(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}},System.Func{``0,``1,``2,``3,``4}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`5&lt;!!0,!!1,!!2,!!3,!!4&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimCompiledQuery.CompileOf6ExpressionOfFuncOfM0M1M2M3M4M5``6(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}},System.Func{``0,``1,``2,``3,``4,``5}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`6&lt;!!0,!!1,!!2,!!3,!!4,!!5&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimCompiledQuery.CompileOf7ExpressionOfFuncOfM0M1M2M3M4M5M6``7(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}},System.Func{``0,``1,``2,``3,``4,``5,``6}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`7&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimCompiledQuery.CompileOf8ExpressionOfFuncOfM0M1M2M3M4M5M6M7``8(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`8&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7&gt;&gt; query)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimCompiledQuery.CompileOf9ExpressionOfFuncOfM0M1M2M3M4M5M6M7M8``9(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}},System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})">
            <summary>Sets the shim of CompiledQuery.Compile(Expression`1&lt;Func`9&lt;!!0,!!1,!!2,!!3,!!4,!!5,!!6,!!7,!!8&gt;&gt; query)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimCompiledQuery.Constructor">
            <summary>Sets the shim of CompiledQuery.CompiledQuery()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimCompiledQuery.ExpressionGet">
            <summary>Sets the shim of CompiledQuery.get_Expression()</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimDBConvert">
            <summary>Shim type of System.Data.Linq.DBConvert</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDBConvert.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDBConvert.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDBConvert.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDBConvert.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDBConvert.ChangeTypeObjectType">
            <summary>Sets the shim of DBConvert.ChangeType(Object value, Type type)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDBConvert.ChangeTypeOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Sets the shim of DBConvert.ChangeType(Object value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDBConvert.StaticConstructor">
            <summary>Sets the shim of DBConvert.DBConvert()</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimDataContext">
            <summary>Shim type of System.Data.Linq.DataContext</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDataContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDataContext.#ctor(System.Data.Linq.DataContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimDataContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.ChangeConflictsGet">
            <summary>Sets the shim of DataContext.get_ChangeConflicts()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.CheckDispose">
            <summary>Sets the shim of DataContext.CheckDispose()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.CheckInSubmitChanges">
            <summary>Sets the shim of DataContext.CheckInSubmitChanges()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.CheckNotInSubmitChanges">
            <summary>Sets the shim of DataContext.CheckNotInSubmitChanges()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.ClearCache">
            <summary>Sets the shim of DataContext.ClearCache()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.Clone">
            <summary>Sets the shim of DataContext.Clone()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.CommandTimeoutGet">
            <summary>Sets the shim of DataContext.get_CommandTimeout()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.CommandTimeoutSetInt32">
            <summary>Sets the shim of DataContext.set_CommandTimeout(Int32 value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.ConnectionGet">
            <summary>Sets the shim of DataContext.get_Connection()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.CreateDatabase">
            <summary>Sets the shim of DataContext.CreateDatabase()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDataContext.AllInstances.CreateMethodCallQueryOf1ObjectMethodInfoObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Linq.DataContext,System.Object,System.Reflection.MethodInfo,System.Object[],System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of DataContext.CreateMethodCallQuery(Object instance, MethodInfo methodInfo, Object[] parameters)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.CreateRefreshContext">
            <summary>Sets the shim of DataContext.CreateRefreshContext()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.DatabaseExists">
            <summary>Sets the shim of DataContext.DatabaseExists()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.DeferredLoadingEnabledGet">
            <summary>Sets the shim of DataContext.get_DeferredLoadingEnabled()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.DeferredLoadingEnabledSetBoolean">
            <summary>Sets the shim of DataContext.set_DeferredLoadingEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.DeleteDatabase">
            <summary>Sets the shim of DataContext.DeleteDatabase()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.Dispose">
            <summary>Sets the shim of DataContext.Dispose()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.DisposeBoolean">
            <summary>Sets the shim of DataContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.ExecuteCommandStringObjectArray">
            <summary>Sets the shim of DataContext.ExecuteCommand(String command, Object[] parameters)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.ExecuteDynamicDeleteObject">
            <summary>Sets the shim of DataContext.ExecuteDynamicDelete(Object entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.ExecuteDynamicInsertObject">
            <summary>Sets the shim of DataContext.ExecuteDynamicInsert(Object entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.ExecuteDynamicUpdateObject">
            <summary>Sets the shim of DataContext.ExecuteDynamicUpdate(Object entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.ExecuteMethodCallObjectMethodInfoObjectArray">
            <summary>Sets the shim of DataContext.ExecuteMethodCall(Object instance, MethodInfo methodInfo, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDataContext.AllInstances.ExecuteQueryOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Linq.DataContext,System.String,System.Object[],System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of DataContext.ExecuteQuery(String query, Object[] parameters)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.ExecuteQueryTypeStringObjectArray">
            <summary>Sets the shim of DataContext.ExecuteQuery(Type elementType, String query, Object[] parameters)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.GetChangeSet">
            <summary>Sets the shim of DataContext.GetChangeSet()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.GetChangeText">
            <summary>Sets the shim of DataContext.GetChangeText()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.GetCommandIQueryable">
            <summary>Sets the shim of DataContext.GetCommand(IQueryable query)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.GetQueryTextIQueryable">
            <summary>Sets the shim of DataContext.GetQueryText(IQueryable query)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDataContext.AllInstances.GetTableOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Linq.DataContext,System.Data.Linq.Table{``0}})">
            <summary>Sets the shim of DataContext.GetTable()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.GetTableType">
            <summary>Sets the shim of DataContext.GetTable(Type type)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.LoadOptionsGet">
            <summary>Sets the shim of DataContext.get_LoadOptions()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.LoadOptionsSetDataLoadOptions">
            <summary>Sets the shim of DataContext.set_LoadOptions(DataLoadOptions value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.LogGet">
            <summary>Sets the shim of DataContext.get_Log()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.LogSetTextWriter">
            <summary>Sets the shim of DataContext.set_Log(TextWriter value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.MappingGet">
            <summary>Sets the shim of DataContext.get_Mapping()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.ObjectTrackingEnabledGet">
            <summary>Sets the shim of DataContext.get_ObjectTrackingEnabled()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.ObjectTrackingEnabledSetBoolean">
            <summary>Sets the shim of DataContext.set_ObjectTrackingEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.RefreshRefreshModeIEnumerable">
            <summary>Sets the shim of DataContext.Refresh(RefreshMode mode, IEnumerable entities)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.RefreshRefreshModeObject">
            <summary>Sets the shim of DataContext.Refresh(RefreshMode mode, Object entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.RefreshRefreshModeObjectArray">
            <summary>Sets the shim of DataContext.Refresh(RefreshMode mode, Object[] entities)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.ResetLoadOptions">
            <summary>Sets the shim of DataContext.ResetLoadOptions()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.SubmitChanges">
            <summary>Sets the shim of DataContext.SubmitChanges()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.SubmitChangesConflictMode">
            <summary>Sets the shim of DataContext.SubmitChanges(ConflictMode failureMode)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.TransactionGet">
            <summary>Sets the shim of DataContext.get_Transaction()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.TransactionSetDbTransaction">
            <summary>Sets the shim of DataContext.set_Transaction(DbTransaction value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.TranslateDbDataReader">
            <summary>Sets the shim of DataContext.Translate(DbDataReader reader)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDataContext.AllInstances.TranslateOf1DbDataReader``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Linq.DataContext,System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of DataContext.Translate(DbDataReader reader)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.TranslateTypeDbDataReader">
            <summary>Sets the shim of DataContext.Translate(Type elementType, DbDataReader reader)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.AllInstances.VerifyTrackingEnabled">
            <summary>Sets the shim of DataContext.VerifyTrackingEnabled()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDataContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDataContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDataContext.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.ChangeConflictsGet">
            <summary>Sets the shim of DataContext.get_ChangeConflicts()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.CheckDispose">
            <summary>Sets the shim of DataContext.CheckDispose()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.CheckInSubmitChanges">
            <summary>Sets the shim of DataContext.CheckInSubmitChanges()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.CheckNotInSubmitChanges">
            <summary>Sets the shim of DataContext.CheckNotInSubmitChanges()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.ClearCache">
            <summary>Sets the shim of DataContext.ClearCache()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.Clone">
            <summary>Sets the shim of DataContext.Clone()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.CommandTimeoutGet">
            <summary>Sets the shim of DataContext.get_CommandTimeout()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.CommandTimeoutSetInt32">
            <summary>Sets the shim of DataContext.set_CommandTimeout(Int32 value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.ConnectionGet">
            <summary>Sets the shim of DataContext.get_Connection()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.Constructor">
            <summary>Sets the shim of DataContext.DataContext()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.ConstructorDataContext">
            <summary>Sets the shim of DataContext.DataContext(DataContext context)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.ConstructorIDbConnection">
            <summary>Sets the shim of DataContext.DataContext(IDbConnection connection)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.ConstructorIDbConnectionMappingSource">
            <summary>Sets the shim of DataContext.DataContext(IDbConnection connection, MappingSource mapping)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.ConstructorString">
            <summary>Sets the shim of DataContext.DataContext(String fileOrServerOrConnection)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.ConstructorStringMappingSource">
            <summary>Sets the shim of DataContext.DataContext(String fileOrServerOrConnection, MappingSource mapping)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.CreateDatabase">
            <summary>Sets the shim of DataContext.CreateDatabase()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDataContext.CreateMethodCallQueryOf1ObjectMethodInfoObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Reflection.MethodInfo,System.Object[],System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of DataContext.CreateMethodCallQuery(Object instance, MethodInfo methodInfo, Object[] parameters)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.CreateRefreshContext">
            <summary>Sets the shim of DataContext.CreateRefreshContext()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.DatabaseExists">
            <summary>Sets the shim of DataContext.DatabaseExists()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.DeferredLoadingEnabledGet">
            <summary>Sets the shim of DataContext.get_DeferredLoadingEnabled()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.DeferredLoadingEnabledSetBoolean">
            <summary>Sets the shim of DataContext.set_DeferredLoadingEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.DeleteDatabase">
            <summary>Sets the shim of DataContext.DeleteDatabase()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.Dispose">
            <summary>Sets the shim of DataContext.Dispose()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.DisposeBoolean">
            <summary>Sets the shim of DataContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.ExecuteCommandStringObjectArray">
            <summary>Sets the shim of DataContext.ExecuteCommand(String command, Object[] parameters)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.ExecuteDynamicDeleteObject">
            <summary>Sets the shim of DataContext.ExecuteDynamicDelete(Object entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.ExecuteDynamicInsertObject">
            <summary>Sets the shim of DataContext.ExecuteDynamicInsert(Object entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.ExecuteDynamicUpdateObject">
            <summary>Sets the shim of DataContext.ExecuteDynamicUpdate(Object entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.ExecuteMethodCallObjectMethodInfoObjectArray">
            <summary>Sets the shim of DataContext.ExecuteMethodCall(Object instance, MethodInfo methodInfo, Object[] parameters)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDataContext.ExecuteQueryOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of DataContext.ExecuteQuery(String query, Object[] parameters)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.ExecuteQueryTypeStringObjectArray">
            <summary>Sets the shim of DataContext.ExecuteQuery(Type elementType, String query, Object[] parameters)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.GetChangeSet">
            <summary>Sets the shim of DataContext.GetChangeSet()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.GetChangeText">
            <summary>Sets the shim of DataContext.GetChangeText()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.GetCommandIQueryable">
            <summary>Sets the shim of DataContext.GetCommand(IQueryable query)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.GetQueryTextIQueryable">
            <summary>Sets the shim of DataContext.GetQueryText(IQueryable query)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDataContext.GetTableOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Linq.Table{``0}})">
            <summary>Sets the shim of DataContext.GetTable()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.GetTableType">
            <summary>Sets the shim of DataContext.GetTable(Type type)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.LoadOptionsGet">
            <summary>Sets the shim of DataContext.get_LoadOptions()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.LoadOptionsSetDataLoadOptions">
            <summary>Sets the shim of DataContext.set_LoadOptions(DataLoadOptions value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.LogGet">
            <summary>Sets the shim of DataContext.get_Log()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.LogSetTextWriter">
            <summary>Sets the shim of DataContext.set_Log(TextWriter value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.MappingGet">
            <summary>Sets the shim of DataContext.get_Mapping()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.ObjectTrackingEnabledGet">
            <summary>Sets the shim of DataContext.get_ObjectTrackingEnabled()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.ObjectTrackingEnabledSetBoolean">
            <summary>Sets the shim of DataContext.set_ObjectTrackingEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.RefreshRefreshModeIEnumerable">
            <summary>Sets the shim of DataContext.Refresh(RefreshMode mode, IEnumerable entities)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.RefreshRefreshModeObject">
            <summary>Sets the shim of DataContext.Refresh(RefreshMode mode, Object entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.RefreshRefreshModeObjectArray">
            <summary>Sets the shim of DataContext.Refresh(RefreshMode mode, Object[] entities)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.ResetLoadOptions">
            <summary>Sets the shim of DataContext.ResetLoadOptions()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.SubmitChanges">
            <summary>Sets the shim of DataContext.SubmitChanges()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.SubmitChangesConflictMode">
            <summary>Sets the shim of DataContext.SubmitChanges(ConflictMode failureMode)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.TransactionGet">
            <summary>Sets the shim of DataContext.get_Transaction()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.TransactionSetDbTransaction">
            <summary>Sets the shim of DataContext.set_Transaction(DbTransaction value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.TranslateDbDataReader">
            <summary>Sets the shim of DataContext.Translate(DbDataReader reader)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDataContext.TranslateOf1DbDataReader``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Common.DbDataReader,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of DataContext.Translate(DbDataReader reader)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.TranslateTypeDbDataReader">
            <summary>Sets the shim of DataContext.Translate(Type elementType, DbDataReader reader)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataContext.VerifyTrackingEnabled">
            <summary>Sets the shim of DataContext.VerifyTrackingEnabled()</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimDataLoadOptions">
            <summary>Shim type of System.Data.Linq.DataLoadOptions</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDataLoadOptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDataLoadOptions.#ctor(System.Data.Linq.DataLoadOptions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimDataLoadOptions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataLoadOptions.AllInstances.AssociateWithLambdaExpression">
            <summary>Sets the shim of DataLoadOptions.AssociateWith(LambdaExpression expression)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDataLoadOptions.AllInstances.AssociateWithOf1ExpressionOfFuncOfM0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Linq.DataLoadOptions,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>Sets the shim of DataLoadOptions.AssociateWith(Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; expression)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataLoadOptions.AllInstances.Freeze">
            <summary>Sets the shim of DataLoadOptions.Freeze()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataLoadOptions.AllInstances.GetAssociationSubqueryMemberInfo">
            <summary>Sets the shim of DataLoadOptions.GetAssociationSubquery(MemberInfo member)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataLoadOptions.AllInstances.IsEmptyGet">
            <summary>Sets the shim of DataLoadOptions.get_IsEmpty()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataLoadOptions.AllInstances.IsPreloadedMemberInfo">
            <summary>Sets the shim of DataLoadOptions.IsPreloaded(MemberInfo member)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataLoadOptions.AllInstances.LoadWithLambdaExpression">
            <summary>Sets the shim of DataLoadOptions.LoadWith(LambdaExpression expression)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDataLoadOptions.AllInstances.LoadWithOf1ExpressionOfFuncOfM0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Linq.DataLoadOptions,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>Sets the shim of DataLoadOptions.LoadWith(Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; expression)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataLoadOptions.AllInstances.PreloadMemberInfo">
            <summary>Sets the shim of DataLoadOptions.Preload(MemberInfo association)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataLoadOptions.AssociateWithLambdaExpression">
            <summary>Sets the shim of DataLoadOptions.AssociateWith(LambdaExpression expression)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDataLoadOptions.AssociateWithOf1ExpressionOfFuncOfM0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>Sets the shim of DataLoadOptions.AssociateWith(Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; expression)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDataLoadOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDataLoadOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataLoadOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataLoadOptions.Constructor">
            <summary>Sets the shim of DataLoadOptions.DataLoadOptions()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataLoadOptions.Freeze">
            <summary>Sets the shim of DataLoadOptions.Freeze()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataLoadOptions.GetAssociationSubqueryMemberInfo">
            <summary>Sets the shim of DataLoadOptions.GetAssociationSubquery(MemberInfo member)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataLoadOptions.IsEmptyGet">
            <summary>Sets the shim of DataLoadOptions.get_IsEmpty()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataLoadOptions.IsPreloadedMemberInfo">
            <summary>Sets the shim of DataLoadOptions.IsPreloaded(MemberInfo member)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataLoadOptions.LoadWithLambdaExpression">
            <summary>Sets the shim of DataLoadOptions.LoadWith(LambdaExpression expression)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDataLoadOptions.LoadWithOf1ExpressionOfFuncOfM0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>Sets the shim of DataLoadOptions.LoadWith(Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt; expression)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataLoadOptions.PreloadMemberInfo">
            <summary>Sets the shim of DataLoadOptions.Preload(MemberInfo association)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDataLoadOptions.ShapesAreEquivalentDataLoadOptionsDataLoadOptions">
            <summary>Sets the shim of DataLoadOptions.ShapesAreEquivalent(DataLoadOptions ds1, DataLoadOptions ds2)</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimDuplicateKeyException">
            <summary>Shim type of System.Data.Linq.DuplicateKeyException</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDuplicateKeyException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDuplicateKeyException.#ctor(System.Data.Linq.DuplicateKeyException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimDuplicateKeyException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDuplicateKeyException.AllInstances.ObjectGet">
            <summary>Sets the shim of DuplicateKeyException.get_Object()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDuplicateKeyException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDuplicateKeyException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDuplicateKeyException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimDuplicateKeyException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDuplicateKeyException.ConstructorObject">
            <summary>Sets the shim of DuplicateKeyException.DuplicateKeyException(Object duplicate)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDuplicateKeyException.ConstructorObjectString">
            <summary>Sets the shim of DuplicateKeyException.DuplicateKeyException(Object duplicate, String message)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDuplicateKeyException.ConstructorObjectStringException">
            <summary>Sets the shim of DuplicateKeyException.DuplicateKeyException(Object duplicate, String message, Exception innerException)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimDuplicateKeyException.ObjectGet">
            <summary>Sets the shim of DuplicateKeyException.get_Object()</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimEntityRef`1">
            <summary>Shim type of System.Data.Linq.EntityRef`1</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimEntityRef`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimEntityRef`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimEntityRef`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimEntityRef`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntityRef`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimEntitySet`1">
            <summary>Shim type of System.Data.Linq.EntitySet`1</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimEntitySet`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimEntitySet`1.#ctor(System.Data.Linq.EntitySet{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AddRangeIEnumerableOfT0">
            <summary>Sets the shim of EntitySet`1.AddRange(IEnumerable`1&lt;!0&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AddT0">
            <summary>Sets the shim of EntitySet`1.Add(!0 entity)</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.AddRangeIEnumerableOfT0">
            <summary>Sets the shim of EntitySet`1.AddRange(IEnumerable`1&lt;!0&gt; collection)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.AddT0">
            <summary>Sets the shim of EntitySet`1.Add(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.AssignIEnumerableOfT0">
            <summary>Sets the shim of EntitySet`1.Assign(IEnumerable`1&lt;!0&gt; entitySource)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.Clear">
            <summary>Sets the shim of EntitySet`1.Clear()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.ContainsListCollectionSystemComponentModelIListSourceget">
            <summary>Sets the shim of EntitySet`1.System.ComponentModel.IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.ContainsT0">
            <summary>Sets the shim of EntitySet`1.Contains(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.CopyToT0ArrayInt32">
            <summary>Sets the shim of EntitySet`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.CountGet">
            <summary>Sets the shim of EntitySet`1.get_Count()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of EntitySet`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.GetNewBindingList">
            <summary>Sets the shim of EntitySet`1.GetNewBindingList()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.GetUnderlyingValues">
            <summary>Sets the shim of EntitySet`1.GetUnderlyingValues()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.HasAssignedValuesGet">
            <summary>Sets the shim of EntitySet`1.get_HasAssignedValues()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.HasLoadedOrAssignedValuesGet">
            <summary>Sets the shim of EntitySet`1.get_HasLoadedOrAssignedValues()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.HasLoadedValuesGet">
            <summary>Sets the shim of EntitySet`1.get_HasLoadedValues()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.HasSourceGet">
            <summary>Sets the shim of EntitySet`1.get_HasSource()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.HasValuesGet">
            <summary>Sets the shim of EntitySet`1.get_HasValues()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.IndexOfT0">
            <summary>Sets the shim of EntitySet`1.IndexOf(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.InsertInt32T0">
            <summary>Sets the shim of EntitySet`1.Insert(Int32 index, !0 entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.IsDeferredGet">
            <summary>Sets the shim of EntitySet`1.get_IsDeferred()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.IsFixedSizeSystemCollectionsIListget">
            <summary>Sets the shim of EntitySet`1.System.Collections.IList.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.IsLoadedGet">
            <summary>Sets the shim of EntitySet`1.get_IsLoaded()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.IsReadOnlySystemCollectionsGenericICollectionTEntityget">
            <summary>Sets the shim of EntitySet`1.System.Collections.Generic.ICollection&lt;TEntity&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.IsReadOnlySystemCollectionsIListget">
            <summary>Sets the shim of EntitySet`1.System.Collections.IList.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of EntitySet`1.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.ItemGetInt32">
            <summary>Sets the shim of EntitySet`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.ItemSetInt32T0">
            <summary>Sets the shim of EntitySet`1.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.ItemSystemCollectionsIListgetInt32">
            <summary>Sets the shim of EntitySet`1.System.Collections.IList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.ItemSystemCollectionsIListsetInt32Object">
            <summary>Sets the shim of EntitySet`1.System.Collections.IList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.ListChangedAddListChangedEventHandler">
            <summary>Sets the shim of EntitySet`1.add_ListChanged(ListChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.ListChangedRemoveListChangedEventHandler">
            <summary>Sets the shim of EntitySet`1.remove_ListChanged(ListChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.Load">
            <summary>Sets the shim of EntitySet`1.Load()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.RemoveAtInt32">
            <summary>Sets the shim of EntitySet`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.RemoveT0">
            <summary>Sets the shim of EntitySet`1.Remove(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.SetSourceIEnumerableOfT0">
            <summary>Sets the shim of EntitySet`1.SetSource(IEnumerable`1&lt;!0&gt; entitySource)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.SourceGet">
            <summary>Sets the shim of EntitySet`1.get_Source()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of EntitySet`1.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of EntitySet`1.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of EntitySet`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.SystemCollectionsIListAddObject">
            <summary>Sets the shim of EntitySet`1.System.Collections.IList.Add(Object value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.SystemCollectionsIListContainsObject">
            <summary>Sets the shim of EntitySet`1.System.Collections.IList.Contains(Object value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.SystemCollectionsIListIndexOfObject">
            <summary>Sets the shim of EntitySet`1.System.Collections.IList.IndexOf(Object value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.SystemCollectionsIListInsertInt32Object">
            <summary>Sets the shim of EntitySet`1.System.Collections.IList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.SystemCollectionsIListRemoveObject">
            <summary>Sets the shim of EntitySet`1.System.Collections.IList.Remove(Object value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AllInstances.SystemComponentModelIListSourceGetList">
            <summary>Sets the shim of EntitySet`1.System.ComponentModel.IListSource.GetList()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.AssignIEnumerableOfT0">
            <summary>Sets the shim of EntitySet`1.Assign(IEnumerable`1&lt;!0&gt; entitySource)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimEntitySet`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimEntitySet`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimEntitySet`1.Bind(System.ComponentModel.IListSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimEntitySet`1.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimEntitySet`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimEntitySet`1.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimEntitySet`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimEntitySet`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimEntitySet`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.Clear">
            <summary>Sets the shim of EntitySet`1.Clear()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.Constructor">
            <summary>Sets the shim of EntitySet`1.EntitySet`1()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.ConstructorActionOfT0ActionOfT0">
            <summary>Sets the shim of EntitySet`1.EntitySet`1(Action`1&lt;!0&gt; onAdd, Action`1&lt;!0&gt; onRemove)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.ConstructorEntitySetOfT0Boolean">
            <summary>Sets the shim of EntitySet`1.EntitySet`1(EntitySet`1&lt;!0&gt; es, Boolean copyNotifications)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.ContainsListCollectionSystemComponentModelIListSourceget">
            <summary>Sets the shim of EntitySet`1.System.ComponentModel.IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.ContainsT0">
            <summary>Sets the shim of EntitySet`1.Contains(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.CopyToT0ArrayInt32">
            <summary>Sets the shim of EntitySet`1.CopyTo(!0[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.CountGet">
            <summary>Sets the shim of EntitySet`1.get_Count()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.GetEnumerator">
            <summary>Sets the shim of EntitySet`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.GetNewBindingList">
            <summary>Sets the shim of EntitySet`1.GetNewBindingList()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.GetUnderlyingValues">
            <summary>Sets the shim of EntitySet`1.GetUnderlyingValues()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.HasAssignedValuesGet">
            <summary>Sets the shim of EntitySet`1.get_HasAssignedValues()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.HasLoadedOrAssignedValuesGet">
            <summary>Sets the shim of EntitySet`1.get_HasLoadedOrAssignedValues()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.HasLoadedValuesGet">
            <summary>Sets the shim of EntitySet`1.get_HasLoadedValues()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.HasSourceGet">
            <summary>Sets the shim of EntitySet`1.get_HasSource()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.HasValuesGet">
            <summary>Sets the shim of EntitySet`1.get_HasValues()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.IndexOfT0">
            <summary>Sets the shim of EntitySet`1.IndexOf(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.InsertInt32T0">
            <summary>Sets the shim of EntitySet`1.Insert(Int32 index, !0 entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.IsDeferredGet">
            <summary>Sets the shim of EntitySet`1.get_IsDeferred()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.IsFixedSizeSystemCollectionsIListget">
            <summary>Sets the shim of EntitySet`1.System.Collections.IList.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.IsLoadedGet">
            <summary>Sets the shim of EntitySet`1.get_IsLoaded()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.IsReadOnlySystemCollectionsGenericICollectionTEntityget">
            <summary>Sets the shim of EntitySet`1.System.Collections.Generic.ICollection&lt;TEntity&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.IsReadOnlySystemCollectionsIListget">
            <summary>Sets the shim of EntitySet`1.System.Collections.IList.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Sets the shim of EntitySet`1.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.ItemGetInt32">
            <summary>Sets the shim of EntitySet`1.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.ItemSetInt32T0">
            <summary>Sets the shim of EntitySet`1.set_Item(Int32 index, !0 value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.ItemSystemCollectionsIListgetInt32">
            <summary>Sets the shim of EntitySet`1.System.Collections.IList.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.ItemSystemCollectionsIListsetInt32Object">
            <summary>Sets the shim of EntitySet`1.System.Collections.IList.set_Item(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.ListChangedAddListChangedEventHandler">
            <summary>Sets the shim of EntitySet`1.add_ListChanged(ListChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.ListChangedRemoveListChangedEventHandler">
            <summary>Sets the shim of EntitySet`1.remove_ListChanged(ListChangedEventHandler value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.Load">
            <summary>Sets the shim of EntitySet`1.Load()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.RemoveAtInt32">
            <summary>Sets the shim of EntitySet`1.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.RemoveT0">
            <summary>Sets the shim of EntitySet`1.Remove(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.SetSourceIEnumerableOfT0">
            <summary>Sets the shim of EntitySet`1.SetSource(IEnumerable`1&lt;!0&gt; entitySource)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.SourceGet">
            <summary>Sets the shim of EntitySet`1.get_Source()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.SyncRootSystemCollectionsICollectionget">
            <summary>Sets the shim of EntitySet`1.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Sets the shim of EntitySet`1.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of EntitySet`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.SystemCollectionsIListAddObject">
            <summary>Sets the shim of EntitySet`1.System.Collections.IList.Add(Object value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.SystemCollectionsIListContainsObject">
            <summary>Sets the shim of EntitySet`1.System.Collections.IList.Contains(Object value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.SystemCollectionsIListIndexOfObject">
            <summary>Sets the shim of EntitySet`1.System.Collections.IList.IndexOf(Object value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.SystemCollectionsIListInsertInt32Object">
            <summary>Sets the shim of EntitySet`1.System.Collections.IList.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.SystemCollectionsIListRemoveObject">
            <summary>Sets the shim of EntitySet`1.System.Collections.IList.Remove(Object value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimEntitySet`1.SystemComponentModelIListSourceGetList">
            <summary>Sets the shim of EntitySet`1.System.ComponentModel.IListSource.GetList()</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimForeignKeyReferenceAlreadyHasValueException">
            <summary>Shim type of System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimForeignKeyReferenceAlreadyHasValueException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimForeignKeyReferenceAlreadyHasValueException.#ctor(System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimForeignKeyReferenceAlreadyHasValueException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimForeignKeyReferenceAlreadyHasValueException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimForeignKeyReferenceAlreadyHasValueException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimForeignKeyReferenceAlreadyHasValueException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimForeignKeyReferenceAlreadyHasValueException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimForeignKeyReferenceAlreadyHasValueException.Constructor">
            <summary>Sets the shim of ForeignKeyReferenceAlreadyHasValueException.ForeignKeyReferenceAlreadyHasValueException()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimForeignKeyReferenceAlreadyHasValueException.ConstructorString">
            <summary>Sets the shim of ForeignKeyReferenceAlreadyHasValueException.ForeignKeyReferenceAlreadyHasValueException(String message)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimForeignKeyReferenceAlreadyHasValueException.ConstructorStringException">
            <summary>Sets the shim of ForeignKeyReferenceAlreadyHasValueException.ForeignKeyReferenceAlreadyHasValueException(String message, Exception innerException)</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimLink`1">
            <summary>Shim type of System.Data.Linq.Link`1</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimLink`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimLink`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimLink`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimLink`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimLink`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimMemberChangeConflict">
            <summary>Shim type of System.Data.Linq.MemberChangeConflict</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimMemberChangeConflict.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimMemberChangeConflict.#ctor(System.Data.Linq.MemberChangeConflict)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimMemberChangeConflict.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimMemberChangeConflict.AllInstances.CurrentValueGet">
            <summary>Sets the shim of MemberChangeConflict.get_CurrentValue()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimMemberChangeConflict.AllInstances.DatabaseValueGet">
            <summary>Sets the shim of MemberChangeConflict.get_DatabaseValue()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimMemberChangeConflict.AllInstances.IsModifiedGet">
            <summary>Sets the shim of MemberChangeConflict.get_IsModified()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimMemberChangeConflict.AllInstances.IsResolvedGet">
            <summary>Sets the shim of MemberChangeConflict.get_IsResolved()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimMemberChangeConflict.AllInstances.MemberGet">
            <summary>Sets the shim of MemberChangeConflict.get_Member()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimMemberChangeConflict.AllInstances.OriginalValueGet">
            <summary>Sets the shim of MemberChangeConflict.get_OriginalValue()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimMemberChangeConflict.AllInstances.ResolveObject">
            <summary>Sets the shim of MemberChangeConflict.Resolve(Object value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimMemberChangeConflict.AllInstances.ResolveRefreshMode">
            <summary>Sets the shim of MemberChangeConflict.Resolve(RefreshMode refreshMode)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimMemberChangeConflict.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimMemberChangeConflict.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimMemberChangeConflict.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimMemberChangeConflict.ConstructorObjectChangeConflictMetaDataMember">
            <summary>Sets the shim of MemberChangeConflict.MemberChangeConflict(ObjectChangeConflict conflict, MetaDataMember metaMember)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimMemberChangeConflict.CurrentValueGet">
            <summary>Sets the shim of MemberChangeConflict.get_CurrentValue()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimMemberChangeConflict.DatabaseValueGet">
            <summary>Sets the shim of MemberChangeConflict.get_DatabaseValue()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimMemberChangeConflict.IsModifiedGet">
            <summary>Sets the shim of MemberChangeConflict.get_IsModified()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimMemberChangeConflict.IsResolvedGet">
            <summary>Sets the shim of MemberChangeConflict.get_IsResolved()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimMemberChangeConflict.MemberGet">
            <summary>Sets the shim of MemberChangeConflict.get_Member()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimMemberChangeConflict.OriginalValueGet">
            <summary>Sets the shim of MemberChangeConflict.get_OriginalValue()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimMemberChangeConflict.ResolveObject">
            <summary>Sets the shim of MemberChangeConflict.Resolve(Object value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimMemberChangeConflict.ResolveRefreshMode">
            <summary>Sets the shim of MemberChangeConflict.Resolve(RefreshMode refreshMode)</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimModifiedMemberInfo">
            <summary>Shim type of System.Data.Linq.ModifiedMemberInfo</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimModifiedMemberInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimModifiedMemberInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimModifiedMemberInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimModifiedMemberInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimModifiedMemberInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimObjectChangeConflict">
            <summary>Shim type of System.Data.Linq.ObjectChangeConflict</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimObjectChangeConflict.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimObjectChangeConflict.#ctor(System.Data.Linq.ObjectChangeConflict)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimObjectChangeConflict.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimObjectChangeConflict.AllInstances.DatabaseGet">
            <summary>Sets the shim of ObjectChangeConflict.get_Database()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimObjectChangeConflict.AllInstances.IsDeletedGet">
            <summary>Sets the shim of ObjectChangeConflict.get_IsDeleted()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimObjectChangeConflict.AllInstances.IsResolvedGet">
            <summary>Sets the shim of ObjectChangeConflict.get_IsResolved()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimObjectChangeConflict.AllInstances.MemberConflictsGet">
            <summary>Sets the shim of ObjectChangeConflict.get_MemberConflicts()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimObjectChangeConflict.AllInstances.ObjectGet">
            <summary>Sets the shim of ObjectChangeConflict.get_Object()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimObjectChangeConflict.AllInstances.OnMemberResolved">
            <summary>Sets the shim of ObjectChangeConflict.OnMemberResolved()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimObjectChangeConflict.AllInstances.OriginalGet">
            <summary>Sets the shim of ObjectChangeConflict.get_Original()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimObjectChangeConflict.AllInstances.Resolve">
            <summary>Sets the shim of ObjectChangeConflict.Resolve()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimObjectChangeConflict.AllInstances.ResolveRefreshMode">
            <summary>Sets the shim of ObjectChangeConflict.Resolve(RefreshMode refreshMode)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimObjectChangeConflict.AllInstances.ResolveRefreshModeBoolean">
            <summary>Sets the shim of ObjectChangeConflict.Resolve(RefreshMode refreshMode, Boolean autoResolveDeletes)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimObjectChangeConflict.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimObjectChangeConflict.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimObjectChangeConflict.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimObjectChangeConflict.DatabaseGet">
            <summary>Sets the shim of ObjectChangeConflict.get_Database()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimObjectChangeConflict.IsDeletedGet">
            <summary>Sets the shim of ObjectChangeConflict.get_IsDeleted()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimObjectChangeConflict.IsResolvedGet">
            <summary>Sets the shim of ObjectChangeConflict.get_IsResolved()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimObjectChangeConflict.MemberConflictsGet">
            <summary>Sets the shim of ObjectChangeConflict.get_MemberConflicts()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimObjectChangeConflict.ObjectGet">
            <summary>Sets the shim of ObjectChangeConflict.get_Object()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimObjectChangeConflict.OnMemberResolved">
            <summary>Sets the shim of ObjectChangeConflict.OnMemberResolved()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimObjectChangeConflict.OriginalGet">
            <summary>Sets the shim of ObjectChangeConflict.get_Original()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimObjectChangeConflict.Resolve">
            <summary>Sets the shim of ObjectChangeConflict.Resolve()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimObjectChangeConflict.ResolveRefreshMode">
            <summary>Sets the shim of ObjectChangeConflict.Resolve(RefreshMode refreshMode)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimObjectChangeConflict.ResolveRefreshModeBoolean">
            <summary>Sets the shim of ObjectChangeConflict.Resolve(RefreshMode refreshMode, Boolean autoResolveDeletes)</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimTable`1">
            <summary>Shim type of System.Data.Linq.Table`1</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimTable`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimTable`1.#ctor(System.Data.Linq.Table{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.ShimTable`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimTable`1.AllInstances.AttachAllOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Linq.Table{`0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Table`1.AttachAll(IEnumerable`1&lt;!!0&gt; entities)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimTable`1.AllInstances.AttachAllOf1IEnumerableOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Linq.Table{`0},System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Sets the shim of Table`1.AttachAll(IEnumerable`1&lt;!!0&gt; entities, Boolean asModified)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.AttachT0">
            <summary>Sets the shim of Table`1.Attach(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.AttachT0Boolean">
            <summary>Sets the shim of Table`1.Attach(!0 entity, Boolean asModified)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.AttachT0T0">
            <summary>Sets the shim of Table`1.Attach(!0 entity, !0 original)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.ContainsListCollectionSystemComponentModelIListSourceget">
            <summary>Sets the shim of Table`1.System.ComponentModel.IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.ContextGet">
            <summary>Sets the shim of Table`1.get_Context()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimTable`1.AllInstances.DeleteAllOnSubmitOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Linq.Table{`0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Table`1.DeleteAllOnSubmit(IEnumerable`1&lt;!!0&gt; entities)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.DeleteOnSubmitT0">
            <summary>Sets the shim of Table`1.DeleteOnSubmit(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.ElementTypeSystemLinqIQueryableget">
            <summary>Sets the shim of Table`1.System.Linq.IQueryable.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.ExpressionSystemLinqIQueryableget">
            <summary>Sets the shim of Table`1.System.Linq.IQueryable.get_Expression()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of Table`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.GetModifiedMembersT0">
            <summary>Sets the shim of Table`1.GetModifiedMembers(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.GetNewBindingList">
            <summary>Sets the shim of Table`1.GetNewBindingList()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.GetOriginalEntityStateT0">
            <summary>Sets the shim of Table`1.GetOriginalEntityState(!0 entity)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimTable`1.AllInstances.InsertAllOnSubmitOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Data.Linq.Table{`0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Table`1.InsertAllOnSubmit(IEnumerable`1&lt;!!0&gt; entities)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.InsertOnSubmitT0">
            <summary>Sets the shim of Table`1.InsertOnSubmit(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of Table`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.ProviderSystemLinqIQueryableget">
            <summary>Sets the shim of Table`1.System.Linq.IQueryable.get_Provider()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.SystemCollectionsGenericIEnumerableTEntityGetEnumerator">
            <summary>Sets the shim of Table`1.System.Collections.Generic.IEnumerable&lt;TEntity&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of Table`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.SystemComponentModelIListSourceGetList">
            <summary>Sets the shim of Table`1.System.ComponentModel.IListSource.GetList()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.SystemDataLinqITableAttachAllIEnumerable">
            <summary>Sets the shim of Table`1.System.Data.Linq.ITable.AttachAll(IEnumerable entities)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.SystemDataLinqITableAttachAllIEnumerableBoolean">
            <summary>Sets the shim of Table`1.System.Data.Linq.ITable.AttachAll(IEnumerable entities, Boolean asModified)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.SystemDataLinqITableAttachObject">
            <summary>Sets the shim of Table`1.System.Data.Linq.ITable.Attach(Object entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.SystemDataLinqITableAttachObjectBoolean">
            <summary>Sets the shim of Table`1.System.Data.Linq.ITable.Attach(Object entity, Boolean asModified)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.SystemDataLinqITableAttachObjectObject">
            <summary>Sets the shim of Table`1.System.Data.Linq.ITable.Attach(Object entity, Object original)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.SystemDataLinqITableDeleteAllOnSubmitIEnumerable">
            <summary>Sets the shim of Table`1.System.Data.Linq.ITable.DeleteAllOnSubmit(IEnumerable entities)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.SystemDataLinqITableDeleteOnSubmitObject">
            <summary>Sets the shim of Table`1.System.Data.Linq.ITable.DeleteOnSubmit(Object entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.SystemDataLinqITableGetModifiedMembersObject">
            <summary>Sets the shim of Table`1.System.Data.Linq.ITable.GetModifiedMembers(Object entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.SystemDataLinqITableGetOriginalEntityStateObject">
            <summary>Sets the shim of Table`1.System.Data.Linq.ITable.GetOriginalEntityState(Object entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.SystemDataLinqITableInsertAllOnSubmitIEnumerable">
            <summary>Sets the shim of Table`1.System.Data.Linq.ITable.InsertAllOnSubmit(IEnumerable entities)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.SystemDataLinqITableInsertOnSubmitObject">
            <summary>Sets the shim of Table`1.System.Data.Linq.ITable.InsertOnSubmit(Object entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.SystemLinqIQueryProviderCreateQueryExpression">
            <summary>Sets the shim of Table`1.System.Linq.IQueryProvider.CreateQuery(Expression expression)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimTable`1.AllInstances.SystemLinqIQueryProviderCreateQueryOf1Expression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Linq.Table{`0},System.Linq.Expressions.Expression,System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of Table`1.System.Linq.IQueryProvider.CreateQuery(Expression expression)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.SystemLinqIQueryProviderExecuteExpression">
            <summary>Sets the shim of Table`1.System.Linq.IQueryProvider.Execute(Expression expression)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimTable`1.AllInstances.SystemLinqIQueryProviderExecuteOf1Expression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Linq.Table{`0},System.Linq.Expressions.Expression,``0})">
            <summary>Sets the shim of Table`1.System.Linq.IQueryProvider.Execute(Expression expression)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AllInstances.ToString01">
            <summary>Sets the shim of Table`1.ToString()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimTable`1.AttachAllOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Table`1.AttachAll(IEnumerable`1&lt;!!0&gt; entities)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimTable`1.AttachAllOf1IEnumerableOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Sets the shim of Table`1.AttachAll(IEnumerable`1&lt;!!0&gt; entities, Boolean asModified)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AttachT0">
            <summary>Sets the shim of Table`1.Attach(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AttachT0Boolean">
            <summary>Sets the shim of Table`1.Attach(!0 entity, Boolean asModified)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.AttachT0T0">
            <summary>Sets the shim of Table`1.Attach(!0 entity, !0 original)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimTable`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimTable`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimTable`1.Bind(System.ComponentModel.IListSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimTable`1.Bind(System.Linq.IQueryProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimTable`1.Bind(System.Linq.IQueryable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimTable`1.Bind(System.Linq.IQueryable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimTable`1.Bind(System.Data.Linq.ITable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimTable`1.Bind(System.Data.Linq.ITable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimTable`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimTable`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.ConstructorDataContextMetaTable">
            <summary>Sets the shim of Table`1.Table`1(DataContext context, MetaTable metaTable)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.ContainsListCollectionSystemComponentModelIListSourceget">
            <summary>Sets the shim of Table`1.System.ComponentModel.IListSource.get_ContainsListCollection()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.ContextGet">
            <summary>Sets the shim of Table`1.get_Context()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimTable`1.DeleteAllOnSubmitOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Table`1.DeleteAllOnSubmit(IEnumerable`1&lt;!!0&gt; entities)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.DeleteOnSubmitT0">
            <summary>Sets the shim of Table`1.DeleteOnSubmit(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.ElementTypeSystemLinqIQueryableget">
            <summary>Sets the shim of Table`1.System.Linq.IQueryable.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.ExpressionSystemLinqIQueryableget">
            <summary>Sets the shim of Table`1.System.Linq.IQueryable.get_Expression()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.GetEnumerator">
            <summary>Sets the shim of Table`1.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.GetModifiedMembersT0">
            <summary>Sets the shim of Table`1.GetModifiedMembers(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.GetNewBindingList">
            <summary>Sets the shim of Table`1.GetNewBindingList()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.GetOriginalEntityStateT0">
            <summary>Sets the shim of Table`1.GetOriginalEntityState(!0 entity)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimTable`1.InsertAllOnSubmitOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Table`1.InsertAllOnSubmit(IEnumerable`1&lt;!!0&gt; entities)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.InsertOnSubmitT0">
            <summary>Sets the shim of Table`1.InsertOnSubmit(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.IsReadOnlyGet">
            <summary>Sets the shim of Table`1.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.ProviderSystemLinqIQueryableget">
            <summary>Sets the shim of Table`1.System.Linq.IQueryable.get_Provider()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.SystemCollectionsGenericIEnumerableTEntityGetEnumerator">
            <summary>Sets the shim of Table`1.System.Collections.Generic.IEnumerable&lt;TEntity&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of Table`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.SystemComponentModelIListSourceGetList">
            <summary>Sets the shim of Table`1.System.ComponentModel.IListSource.GetList()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.SystemDataLinqITableAttachAllIEnumerable">
            <summary>Sets the shim of Table`1.System.Data.Linq.ITable.AttachAll(IEnumerable entities)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.SystemDataLinqITableAttachAllIEnumerableBoolean">
            <summary>Sets the shim of Table`1.System.Data.Linq.ITable.AttachAll(IEnumerable entities, Boolean asModified)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.SystemDataLinqITableAttachObject">
            <summary>Sets the shim of Table`1.System.Data.Linq.ITable.Attach(Object entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.SystemDataLinqITableAttachObjectBoolean">
            <summary>Sets the shim of Table`1.System.Data.Linq.ITable.Attach(Object entity, Boolean asModified)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.SystemDataLinqITableAttachObjectObject">
            <summary>Sets the shim of Table`1.System.Data.Linq.ITable.Attach(Object entity, Object original)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.SystemDataLinqITableDeleteAllOnSubmitIEnumerable">
            <summary>Sets the shim of Table`1.System.Data.Linq.ITable.DeleteAllOnSubmit(IEnumerable entities)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.SystemDataLinqITableDeleteOnSubmitObject">
            <summary>Sets the shim of Table`1.System.Data.Linq.ITable.DeleteOnSubmit(Object entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.SystemDataLinqITableGetModifiedMembersObject">
            <summary>Sets the shim of Table`1.System.Data.Linq.ITable.GetModifiedMembers(Object entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.SystemDataLinqITableGetOriginalEntityStateObject">
            <summary>Sets the shim of Table`1.System.Data.Linq.ITable.GetOriginalEntityState(Object entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.SystemDataLinqITableInsertAllOnSubmitIEnumerable">
            <summary>Sets the shim of Table`1.System.Data.Linq.ITable.InsertAllOnSubmit(IEnumerable entities)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.SystemDataLinqITableInsertOnSubmitObject">
            <summary>Sets the shim of Table`1.System.Data.Linq.ITable.InsertOnSubmit(Object entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.SystemLinqIQueryProviderCreateQueryExpression">
            <summary>Sets the shim of Table`1.System.Linq.IQueryProvider.CreateQuery(Expression expression)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimTable`1.SystemLinqIQueryProviderCreateQueryOf1Expression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression,System.Linq.IQueryable{``0}})">
            <summary>Sets the shim of Table`1.System.Linq.IQueryProvider.CreateQuery(Expression expression)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.SystemLinqIQueryProviderExecuteExpression">
            <summary>Sets the shim of Table`1.System.Linq.IQueryProvider.Execute(Expression expression)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.ShimTable`1.SystemLinqIQueryProviderExecuteOf1Expression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression,``0})">
            <summary>Sets the shim of Table`1.System.Linq.IQueryProvider.Execute(Expression expression)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.ShimTable`1.ToString">
            <summary>Sets the shim of Table`1.ToString()</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.StubChangeConflictException">
            <summary>Stub type of System.Data.Linq.ChangeConflictException</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubChangeConflictException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubChangeConflictException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubChangeConflictException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubChangeConflictException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubChangeConflictException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubChangeConflictException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubChangeConflictException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubChangeConflictException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubChangeConflictException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubChangeConflictException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubChangeConflictException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubChangeConflictException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubChangeConflictException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubChangeConflictException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubChangeConflictException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubChangeConflictException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubChangeConflictException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubChangeConflictException.InitializeStub">
            <summary>Initializes a new instance of type StubChangeConflictException</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubChangeConflictException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubChangeConflictException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubChangeConflictException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubChangeConflictException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubChangeConflictException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubChangeConflictException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubChangeConflictException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubChangeConflictException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubChangeConflictException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubChangeConflictException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubChangeConflictException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.StubDataContext">
            <summary>Stub type of System.Data.Linq.DataContext</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubDataContext.#ctor(System.Data.IDbConnection)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubDataContext.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubDataContext.#ctor(System.Data.IDbConnection,System.Data.Linq.Mapping.MappingSource)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubDataContext.#ctor(System.String,System.Data.Linq.Mapping.MappingSource)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubDataContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubDataContext.Dispose(System.Boolean)">
            <summary>Sets the stub of DataContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubDataContext.DisposeBoolean">
            <summary>Sets the stub of DataContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubDataContext.InitializeStub">
            <summary>Initializes a new instance of type StubDataContext</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubDataContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubDataContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubDataContext.SubmitChanges(System.Data.Linq.ConflictMode)">
            <summary>Sets the stub of DataContext.SubmitChanges(ConflictMode failureMode)</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubDataContext.SubmitChangesConflictMode">
            <summary>Sets the stub of DataContext.SubmitChanges(ConflictMode failureMode)</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.StubDuplicateKeyException">
            <summary>Stub type of System.Data.Linq.DuplicateKeyException</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubDuplicateKeyException.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubDuplicateKeyException.#ctor(System.Object,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubDuplicateKeyException.#ctor(System.Object,System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubDuplicateKeyException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubDuplicateKeyException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubDuplicateKeyException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubDuplicateKeyException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubDuplicateKeyException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubDuplicateKeyException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubDuplicateKeyException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubDuplicateKeyException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubDuplicateKeyException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubDuplicateKeyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubDuplicateKeyException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubDuplicateKeyException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubDuplicateKeyException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubDuplicateKeyException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubDuplicateKeyException.InitializeStub">
            <summary>Initializes a new instance of type StubDuplicateKeyException</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubDuplicateKeyException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubDuplicateKeyException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubDuplicateKeyException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubDuplicateKeyException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubDuplicateKeyException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubDuplicateKeyException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubDuplicateKeyException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubDuplicateKeyException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubDuplicateKeyException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubDuplicateKeyException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubDuplicateKeyException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException">
            <summary>Stub type of System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubForeignKeyReferenceAlreadyHasValueException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubForeignKeyReferenceAlreadyHasValueException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.InitializeStub">
            <summary>Initializes a new instance of type StubForeignKeyReferenceAlreadyHasValueException</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubForeignKeyReferenceAlreadyHasValueException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.StubIExecuteResult">
            <summary>Stub type of System.Data.Linq.IExecuteResult</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubIExecuteResult.#ctor">
            <summary>Initializes a new instance of type StubIExecuteResult</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubIExecuteResult.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubIExecuteResult.GetParameterValueInt32">
            <summary>Sets the stub of IExecuteResult.GetParameterValue(Int32 parameterIndex)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubIExecuteResult.System#Data#Linq#IExecuteResult#ReturnValue">
            <summary>Sets the stub of IExecuteResult.get_ReturnValue()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubIExecuteResult.ReturnValueGet">
            <summary>Sets the stub of IExecuteResult.get_ReturnValue()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubIExecuteResult.System#Data#Linq#IExecuteResult#GetParameterValue(System.Int32)">
            <summary>Sets the stub of IExecuteResult.GetParameterValue(Int32 parameterIndex)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubIExecuteResult.System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.StubIFunctionResult">
            <summary>Stub type of System.Data.Linq.IFunctionResult</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubIFunctionResult.#ctor">
            <summary>Initializes a new instance of type StubIFunctionResult</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubIFunctionResult.System#Data#Linq#IFunctionResult#ReturnValue">
            <summary>Sets the stub of IFunctionResult.get_ReturnValue()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubIFunctionResult.ReturnValueGet">
            <summary>Sets the stub of IFunctionResult.get_ReturnValue()</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.StubIMultipleResults">
            <summary>Stub type of System.Data.Linq.IMultipleResults</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubIMultipleResults.#ctor">
            <summary>Initializes a new instance of type StubIMultipleResults</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubIMultipleResults.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubIMultipleResults.GetResultOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets stubs of GetResult()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubIMultipleResults.System#Data#Linq#IFunctionResult#ReturnValue">
            <summary>Sets the stub of IFunctionResult.get_ReturnValue()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubIMultipleResults.ReturnValueGet">
            <summary>Sets the stub of IFunctionResult.get_ReturnValue()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubIMultipleResults.System#Data#Linq#IMultipleResults#GetResult``1">
            <summary>Sets the stub of IMultipleResults.GetResult()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubIMultipleResults.System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.StubISingleResult`1">
            <summary>Stub type of System.Data.Linq.ISingleResult`1</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubISingleResult`1.#ctor">
            <summary>Initializes a new instance of type StubISingleResult</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubISingleResult`1.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubISingleResult`1.GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubISingleResult`1.GetEnumerator01">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubISingleResult`1.System#Data#Linq#IFunctionResult#ReturnValue">
            <summary>Sets the stub of IFunctionResult.get_ReturnValue()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubISingleResult`1.ReturnValueGet">
            <summary>Sets the stub of IFunctionResult.get_ReturnValue()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubISingleResult`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubISingleResult`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubISingleResult`1.System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.StubITable">
            <summary>Stub type of System.Data.Linq.ITable</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubITable.#ctor">
            <summary>Initializes a new instance of type StubITable</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubITable.AttachAllIEnumerable">
            <summary>Sets the stub of ITable.AttachAll(IEnumerable entities)</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubITable.AttachAllIEnumerableBoolean">
            <summary>Sets the stub of ITable.AttachAll(IEnumerable entities, Boolean asModified)</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubITable.AttachObject">
            <summary>Sets the stub of ITable.Attach(Object entity)</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubITable.AttachObjectBoolean">
            <summary>Sets the stub of ITable.Attach(Object entity, Boolean asModified)</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubITable.AttachObjectObject">
            <summary>Sets the stub of ITable.Attach(Object entity, Object original)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubITable.System#Data#Linq#ITable#Context">
            <summary>Sets the stub of ITable.get_Context()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubITable.ContextGet">
            <summary>Sets the stub of ITable.get_Context()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubITable.DeleteAllOnSubmitIEnumerable">
            <summary>Sets the stub of ITable.DeleteAllOnSubmit(IEnumerable entities)</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubITable.DeleteOnSubmitObject">
            <summary>Sets the stub of ITable.DeleteOnSubmit(Object entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubITable.System#Linq#IQueryable#ElementType">
            <summary>Sets the stub of IQueryable.get_ElementType()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubITable.ElementTypeGet">
            <summary>Sets the stub of IQueryable.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubITable.System#Linq#IQueryable#Expression">
            <summary>Sets the stub of IQueryable.get_Expression()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubITable.ExpressionGet">
            <summary>Sets the stub of IQueryable.get_Expression()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubITable.GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubITable.GetModifiedMembersObject">
            <summary>Sets the stub of ITable.GetModifiedMembers(Object entity)</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubITable.GetOriginalEntityStateObject">
            <summary>Sets the stub of ITable.GetOriginalEntityState(Object entity)</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubITable.InsertAllOnSubmitIEnumerable">
            <summary>Sets the stub of ITable.InsertAllOnSubmit(IEnumerable entities)</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubITable.InsertOnSubmitObject">
            <summary>Sets the stub of ITable.InsertOnSubmit(Object entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubITable.System#Data#Linq#ITable#IsReadOnly">
            <summary>Sets the stub of ITable.get_IsReadOnly()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubITable.IsReadOnlyGet">
            <summary>Sets the stub of ITable.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubITable.System#Linq#IQueryable#Provider">
            <summary>Sets the stub of IQueryable.get_Provider()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubITable.ProviderGet">
            <summary>Sets the stub of IQueryable.get_Provider()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubITable.System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubITable.System#Data#Linq#ITable#Attach(System.Object)">
            <summary>Sets the stub of ITable.Attach(Object entity)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubITable.System#Data#Linq#ITable#Attach(System.Object,System.Object)">
            <summary>Sets the stub of ITable.Attach(Object entity, Object original)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubITable.System#Data#Linq#ITable#Attach(System.Object,System.Boolean)">
            <summary>Sets the stub of ITable.Attach(Object entity, Boolean asModified)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubITable.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable)">
            <summary>Sets the stub of ITable.AttachAll(IEnumerable entities)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubITable.System#Data#Linq#ITable#AttachAll(System.Collections.IEnumerable,System.Boolean)">
            <summary>Sets the stub of ITable.AttachAll(IEnumerable entities, Boolean asModified)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubITable.System#Data#Linq#ITable#DeleteAllOnSubmit(System.Collections.IEnumerable)">
            <summary>Sets the stub of ITable.DeleteAllOnSubmit(IEnumerable entities)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubITable.System#Data#Linq#ITable#DeleteOnSubmit(System.Object)">
            <summary>Sets the stub of ITable.DeleteOnSubmit(Object entity)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubITable.System#Data#Linq#ITable#GetModifiedMembers(System.Object)">
            <summary>Sets the stub of ITable.GetModifiedMembers(Object entity)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubITable.System#Data#Linq#ITable#GetOriginalEntityState(System.Object)">
            <summary>Sets the stub of ITable.GetOriginalEntityState(Object entity)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubITable.System#Data#Linq#ITable#InsertAllOnSubmit(System.Collections.IEnumerable)">
            <summary>Sets the stub of ITable.InsertAllOnSubmit(IEnumerable entities)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubITable.System#Data#Linq#ITable#InsertOnSubmit(System.Object)">
            <summary>Sets the stub of ITable.InsertOnSubmit(Object entity)</summary>
        </member>
        <member name="T:System.Data.Linq.Fakes.StubITable`1">
            <summary>Stub type of System.Data.Linq.ITable`1</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubITable`1.#ctor">
            <summary>Initializes a new instance of type StubITable</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubITable`1.AttachT0">
            <summary>Sets the stub of ITable`1.Attach(!0 entity)</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubITable`1.DeleteOnSubmitT0">
            <summary>Sets the stub of ITable`1.DeleteOnSubmit(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubITable`1.System#Linq#IQueryable#ElementType">
            <summary>Sets the stub of IQueryable.get_ElementType()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubITable`1.ElementTypeGet">
            <summary>Sets the stub of IQueryable.get_ElementType()</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubITable`1.System#Linq#IQueryable#Expression">
            <summary>Sets the stub of IQueryable.get_Expression()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubITable`1.ExpressionGet">
            <summary>Sets the stub of IQueryable.get_Expression()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubITable`1.GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubITable`1.GetEnumerator01">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubITable`1.InsertOnSubmitT0">
            <summary>Sets the stub of ITable`1.InsertOnSubmit(!0 entity)</summary>
        </member>
        <member name="P:System.Data.Linq.Fakes.StubITable`1.System#Linq#IQueryable#Provider">
            <summary>Sets the stub of IQueryable.get_Provider()</summary>
        </member>
        <member name="F:System.Data.Linq.Fakes.StubITable`1.ProviderGet">
            <summary>Sets the stub of IQueryable.get_Provider()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubITable`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubITable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubITable`1.System#Data#Linq#ITable{TEntity}#Attach(`0)">
            <summary>Sets the stub of ITable`1.Attach(!0 entity)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubITable`1.System#Data#Linq#ITable{TEntity}#DeleteOnSubmit(`0)">
            <summary>Sets the stub of ITable`1.DeleteOnSubmit(!0 entity)</summary>
        </member>
        <member name="M:System.Data.Linq.Fakes.StubITable`1.System#Data#Linq#ITable{TEntity}#InsertOnSubmit(`0)">
            <summary>Sets the stub of ITable`1.InsertOnSubmit(!0 entity)</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute">
            <summary>Shim type of System.Data.Linq.Mapping.AssociationAttribute</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.#ctor(System.Data.Linq.Mapping.AssociationAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.AllInstances.DeleteOnNullGet">
            <summary>Sets the shim of AssociationAttribute.get_DeleteOnNull()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.AllInstances.DeleteOnNullSetBoolean">
            <summary>Sets the shim of AssociationAttribute.set_DeleteOnNull(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.AllInstances.DeleteRuleGet">
            <summary>Sets the shim of AssociationAttribute.get_DeleteRule()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.AllInstances.DeleteRuleSetString">
            <summary>Sets the shim of AssociationAttribute.set_DeleteRule(String value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.AllInstances.IsForeignKeyGet">
            <summary>Sets the shim of AssociationAttribute.get_IsForeignKey()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.AllInstances.IsForeignKeySetBoolean">
            <summary>Sets the shim of AssociationAttribute.set_IsForeignKey(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.AllInstances.IsUniqueGet">
            <summary>Sets the shim of AssociationAttribute.get_IsUnique()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.AllInstances.IsUniqueSetBoolean">
            <summary>Sets the shim of AssociationAttribute.set_IsUnique(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.AllInstances.OtherKeyGet">
            <summary>Sets the shim of AssociationAttribute.get_OtherKey()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.AllInstances.OtherKeySetString">
            <summary>Sets the shim of AssociationAttribute.set_OtherKey(String value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.AllInstances.ThisKeyGet">
            <summary>Sets the shim of AssociationAttribute.get_ThisKey()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.AllInstances.ThisKeySetString">
            <summary>Sets the shim of AssociationAttribute.set_ThisKey(String value)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.Constructor">
            <summary>Sets the shim of AssociationAttribute.AssociationAttribute()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.DeleteOnNullGet">
            <summary>Sets the shim of AssociationAttribute.get_DeleteOnNull()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.DeleteOnNullSetBoolean">
            <summary>Sets the shim of AssociationAttribute.set_DeleteOnNull(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.DeleteRuleGet">
            <summary>Sets the shim of AssociationAttribute.get_DeleteRule()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.DeleteRuleSetString">
            <summary>Sets the shim of AssociationAttribute.set_DeleteRule(String value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.IsForeignKeyGet">
            <summary>Sets the shim of AssociationAttribute.get_IsForeignKey()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.IsForeignKeySetBoolean">
            <summary>Sets the shim of AssociationAttribute.set_IsForeignKey(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.IsUniqueGet">
            <summary>Sets the shim of AssociationAttribute.get_IsUnique()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.IsUniqueSetBoolean">
            <summary>Sets the shim of AssociationAttribute.set_IsUnique(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.OtherKeyGet">
            <summary>Sets the shim of AssociationAttribute.get_OtherKey()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.OtherKeySetString">
            <summary>Sets the shim of AssociationAttribute.set_OtherKey(String value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.ThisKeyGet">
            <summary>Sets the shim of AssociationAttribute.get_ThisKey()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAssociationAttribute.ThisKeySetString">
            <summary>Sets the shim of AssociationAttribute.set_ThisKey(String value)</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimAttributeMappingSource">
            <summary>Shim type of System.Data.Linq.Mapping.AttributeMappingSource</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimAttributeMappingSource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimAttributeMappingSource.#ctor(System.Data.Linq.Mapping.AttributeMappingSource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimAttributeMappingSource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAttributeMappingSource.AllInstances.CreateModelType">
            <summary>Sets the shim of AttributeMappingSource.CreateModel(Type dataContextType)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimAttributeMappingSource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimAttributeMappingSource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAttributeMappingSource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAttributeMappingSource.Constructor">
            <summary>Sets the shim of AttributeMappingSource.AttributeMappingSource()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimAttributeMappingSource.CreateModelType">
            <summary>Sets the shim of AttributeMappingSource.CreateModel(Type dataContextType)</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute">
            <summary>Shim type of System.Data.Linq.Mapping.ColumnAttribute</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.#ctor(System.Data.Linq.Mapping.ColumnAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.AllInstances.AutoSyncGet">
            <summary>Sets the shim of ColumnAttribute.get_AutoSync()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.AllInstances.AutoSyncSetAutoSync">
            <summary>Sets the shim of ColumnAttribute.set_AutoSync(AutoSync value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.AllInstances.CanBeNullGet">
            <summary>Sets the shim of ColumnAttribute.get_CanBeNull()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.AllInstances.CanBeNullSetBoolean">
            <summary>Sets the shim of ColumnAttribute.set_CanBeNull(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.AllInstances.CanBeNullSetGet">
            <summary>Sets the shim of ColumnAttribute.get_CanBeNullSet()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.AllInstances.DbTypeGet">
            <summary>Sets the shim of ColumnAttribute.get_DbType()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.AllInstances.DbTypeSetString">
            <summary>Sets the shim of ColumnAttribute.set_DbType(String value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.AllInstances.ExpressionGet">
            <summary>Sets the shim of ColumnAttribute.get_Expression()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.AllInstances.ExpressionSetString">
            <summary>Sets the shim of ColumnAttribute.set_Expression(String value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.AllInstances.IsDbGeneratedGet">
            <summary>Sets the shim of ColumnAttribute.get_IsDbGenerated()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.AllInstances.IsDbGeneratedSetBoolean">
            <summary>Sets the shim of ColumnAttribute.set_IsDbGenerated(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.AllInstances.IsDiscriminatorGet">
            <summary>Sets the shim of ColumnAttribute.get_IsDiscriminator()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.AllInstances.IsDiscriminatorSetBoolean">
            <summary>Sets the shim of ColumnAttribute.set_IsDiscriminator(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.AllInstances.IsPrimaryKeyGet">
            <summary>Sets the shim of ColumnAttribute.get_IsPrimaryKey()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.AllInstances.IsPrimaryKeySetBoolean">
            <summary>Sets the shim of ColumnAttribute.set_IsPrimaryKey(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.AllInstances.IsVersionGet">
            <summary>Sets the shim of ColumnAttribute.get_IsVersion()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.AllInstances.IsVersionSetBoolean">
            <summary>Sets the shim of ColumnAttribute.set_IsVersion(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.AllInstances.UpdateCheckGet">
            <summary>Sets the shim of ColumnAttribute.get_UpdateCheck()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.AllInstances.UpdateCheckSetUpdateCheck">
            <summary>Sets the shim of ColumnAttribute.set_UpdateCheck(UpdateCheck value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.AutoSyncGet">
            <summary>Sets the shim of ColumnAttribute.get_AutoSync()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.AutoSyncSetAutoSync">
            <summary>Sets the shim of ColumnAttribute.set_AutoSync(AutoSync value)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.CanBeNullGet">
            <summary>Sets the shim of ColumnAttribute.get_CanBeNull()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.CanBeNullSetBoolean">
            <summary>Sets the shim of ColumnAttribute.set_CanBeNull(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.CanBeNullSetGet">
            <summary>Sets the shim of ColumnAttribute.get_CanBeNullSet()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.Constructor">
            <summary>Sets the shim of ColumnAttribute.ColumnAttribute()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.DbTypeGet">
            <summary>Sets the shim of ColumnAttribute.get_DbType()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.DbTypeSetString">
            <summary>Sets the shim of ColumnAttribute.set_DbType(String value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.ExpressionGet">
            <summary>Sets the shim of ColumnAttribute.get_Expression()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.ExpressionSetString">
            <summary>Sets the shim of ColumnAttribute.set_Expression(String value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.IsDbGeneratedGet">
            <summary>Sets the shim of ColumnAttribute.get_IsDbGenerated()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.IsDbGeneratedSetBoolean">
            <summary>Sets the shim of ColumnAttribute.set_IsDbGenerated(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.IsDiscriminatorGet">
            <summary>Sets the shim of ColumnAttribute.get_IsDiscriminator()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.IsDiscriminatorSetBoolean">
            <summary>Sets the shim of ColumnAttribute.set_IsDiscriminator(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.IsPrimaryKeyGet">
            <summary>Sets the shim of ColumnAttribute.get_IsPrimaryKey()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.IsPrimaryKeySetBoolean">
            <summary>Sets the shim of ColumnAttribute.set_IsPrimaryKey(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.IsVersionGet">
            <summary>Sets the shim of ColumnAttribute.get_IsVersion()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.IsVersionSetBoolean">
            <summary>Sets the shim of ColumnAttribute.set_IsVersion(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.UpdateCheckGet">
            <summary>Sets the shim of ColumnAttribute.get_UpdateCheck()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimColumnAttribute.UpdateCheckSetUpdateCheck">
            <summary>Sets the shim of ColumnAttribute.set_UpdateCheck(UpdateCheck value)</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimDataAttribute">
            <summary>Shim type of System.Data.Linq.Mapping.DataAttribute</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimDataAttribute.#ctor(System.Data.Linq.Mapping.DataAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimDataAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimDataAttribute.AllInstances.NameGet">
            <summary>Sets the shim of DataAttribute.get_Name()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimDataAttribute.AllInstances.NameSetString">
            <summary>Sets the shim of DataAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimDataAttribute.AllInstances.StorageGet">
            <summary>Sets the shim of DataAttribute.get_Storage()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimDataAttribute.AllInstances.StorageSetString">
            <summary>Sets the shim of DataAttribute.set_Storage(String value)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimDataAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimDataAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimDataAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimDataAttribute.Constructor">
            <summary>Sets the shim of DataAttribute.DataAttribute()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimDataAttribute.NameGet">
            <summary>Sets the shim of DataAttribute.get_Name()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimDataAttribute.NameSetString">
            <summary>Sets the shim of DataAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimDataAttribute.StorageGet">
            <summary>Sets the shim of DataAttribute.get_Storage()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimDataAttribute.StorageSetString">
            <summary>Sets the shim of DataAttribute.set_Storage(String value)</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimDatabaseAttribute">
            <summary>Shim type of System.Data.Linq.Mapping.DatabaseAttribute</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimDatabaseAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimDatabaseAttribute.#ctor(System.Data.Linq.Mapping.DatabaseAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimDatabaseAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimDatabaseAttribute.AllInstances.NameGet">
            <summary>Sets the shim of DatabaseAttribute.get_Name()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimDatabaseAttribute.AllInstances.NameSetString">
            <summary>Sets the shim of DatabaseAttribute.set_Name(String value)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimDatabaseAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimDatabaseAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimDatabaseAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimDatabaseAttribute.Constructor">
            <summary>Sets the shim of DatabaseAttribute.DatabaseAttribute()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimDatabaseAttribute.NameGet">
            <summary>Sets the shim of DatabaseAttribute.get_Name()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimDatabaseAttribute.NameSetString">
            <summary>Sets the shim of DatabaseAttribute.set_Name(String value)</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimFunctionAttribute">
            <summary>Shim type of System.Data.Linq.Mapping.FunctionAttribute</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimFunctionAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimFunctionAttribute.#ctor(System.Data.Linq.Mapping.FunctionAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimFunctionAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimFunctionAttribute.AllInstances.IsComposableGet">
            <summary>Sets the shim of FunctionAttribute.get_IsComposable()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimFunctionAttribute.AllInstances.IsComposableSetBoolean">
            <summary>Sets the shim of FunctionAttribute.set_IsComposable(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimFunctionAttribute.AllInstances.NameGet">
            <summary>Sets the shim of FunctionAttribute.get_Name()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimFunctionAttribute.AllInstances.NameSetString">
            <summary>Sets the shim of FunctionAttribute.set_Name(String value)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimFunctionAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimFunctionAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimFunctionAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimFunctionAttribute.Constructor">
            <summary>Sets the shim of FunctionAttribute.FunctionAttribute()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimFunctionAttribute.IsComposableGet">
            <summary>Sets the shim of FunctionAttribute.get_IsComposable()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimFunctionAttribute.IsComposableSetBoolean">
            <summary>Sets the shim of FunctionAttribute.set_IsComposable(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimFunctionAttribute.NameGet">
            <summary>Sets the shim of FunctionAttribute.get_Name()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimFunctionAttribute.NameSetString">
            <summary>Sets the shim of FunctionAttribute.set_Name(String value)</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimInheritanceMappingAttribute">
            <summary>Shim type of System.Data.Linq.Mapping.InheritanceMappingAttribute</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimInheritanceMappingAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimInheritanceMappingAttribute.#ctor(System.Data.Linq.Mapping.InheritanceMappingAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimInheritanceMappingAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimInheritanceMappingAttribute.AllInstances.CodeGet">
            <summary>Sets the shim of InheritanceMappingAttribute.get_Code()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimInheritanceMappingAttribute.AllInstances.CodeSetObject">
            <summary>Sets the shim of InheritanceMappingAttribute.set_Code(Object value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimInheritanceMappingAttribute.AllInstances.IsDefaultGet">
            <summary>Sets the shim of InheritanceMappingAttribute.get_IsDefault()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimInheritanceMappingAttribute.AllInstances.IsDefaultSetBoolean">
            <summary>Sets the shim of InheritanceMappingAttribute.set_IsDefault(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimInheritanceMappingAttribute.AllInstances.TypeGet">
            <summary>Sets the shim of InheritanceMappingAttribute.get_Type()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimInheritanceMappingAttribute.AllInstances.TypeSetType">
            <summary>Sets the shim of InheritanceMappingAttribute.set_Type(Type value)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimInheritanceMappingAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimInheritanceMappingAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimInheritanceMappingAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimInheritanceMappingAttribute.CodeGet">
            <summary>Sets the shim of InheritanceMappingAttribute.get_Code()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimInheritanceMappingAttribute.CodeSetObject">
            <summary>Sets the shim of InheritanceMappingAttribute.set_Code(Object value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimInheritanceMappingAttribute.Constructor">
            <summary>Sets the shim of InheritanceMappingAttribute.InheritanceMappingAttribute()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimInheritanceMappingAttribute.IsDefaultGet">
            <summary>Sets the shim of InheritanceMappingAttribute.get_IsDefault()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimInheritanceMappingAttribute.IsDefaultSetBoolean">
            <summary>Sets the shim of InheritanceMappingAttribute.set_IsDefault(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimInheritanceMappingAttribute.TypeGet">
            <summary>Sets the shim of InheritanceMappingAttribute.get_Type()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimInheritanceMappingAttribute.TypeSetType">
            <summary>Sets the shim of InheritanceMappingAttribute.set_Type(Type value)</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimMappingSource">
            <summary>Shim type of System.Data.Linq.Mapping.MappingSource</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMappingSource.#ctor(System.Data.Linq.Mapping.MappingSource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimMappingSource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMappingSource.AllInstances.GetModelType">
            <summary>Sets the shim of MappingSource.GetModel(Type dataContextType)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMappingSource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMappingSource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMappingSource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMappingSource.Constructor">
            <summary>Sets the shim of MappingSource.MappingSource()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMappingSource.GetModelType">
            <summary>Sets the shim of MappingSource.GetModel(Type dataContextType)</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimMetaAccessor">
            <summary>Shim type of System.Data.Linq.Mapping.MetaAccessor</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaAccessor.#ctor(System.Data.Linq.Mapping.MetaAccessor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimMetaAccessor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaAccessor.AllInstances.HasAssignedValueObject">
            <summary>Sets the shim of MetaAccessor.HasAssignedValue(Object instance)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaAccessor.AllInstances.HasLoadedValueObject">
            <summary>Sets the shim of MetaAccessor.HasLoadedValue(Object instance)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaAccessor.AllInstances.HasValueObject">
            <summary>Sets the shim of MetaAccessor.HasValue(Object instance)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaAccessor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaAccessor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaAccessor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaAccessor.Constructor">
            <summary>Sets the shim of MetaAccessor.MetaAccessor()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaAccessor.HasAssignedValueObject">
            <summary>Sets the shim of MetaAccessor.HasAssignedValue(Object instance)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaAccessor.HasLoadedValueObject">
            <summary>Sets the shim of MetaAccessor.HasLoadedValue(Object instance)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaAccessor.HasValueObject">
            <summary>Sets the shim of MetaAccessor.HasValue(Object instance)</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimMetaAccessor`2">
            <summary>Shim type of System.Data.Linq.Mapping.MetaAccessor`2</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaAccessor`2.#ctor(System.Data.Linq.Mapping.MetaAccessor{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimMetaAccessor`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaAccessor`2.AllInstances.GetBoxedValueObject">
            <summary>Sets the shim of MetaAccessor`2.GetBoxedValue(Object instance)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaAccessor`2.AllInstances.SetBoxedValueObjectRefObject">
            <summary>Sets the shim of MetaAccessor`2.SetBoxedValue(Object&amp; instance, Object value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaAccessor`2.AllInstances.TypeGet">
            <summary>Sets the shim of MetaAccessor`2.get_Type()</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaAccessor`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaAccessor`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaAccessor`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaAccessor`2.Constructor">
            <summary>Sets the shim of MetaAccessor`2.MetaAccessor`2()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaAccessor`2.GetBoxedValueObject">
            <summary>Sets the shim of MetaAccessor`2.GetBoxedValue(Object instance)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaAccessor`2.TypeGet">
            <summary>Sets the shim of MetaAccessor`2.get_Type()</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimMetaAssociation">
            <summary>Shim type of System.Data.Linq.Mapping.MetaAssociation</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaAssociation.#ctor(System.Data.Linq.Mapping.MetaAssociation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimMetaAssociation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaAssociation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaAssociation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaAssociation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaAssociation.Constructor">
            <summary>Sets the shim of MetaAssociation.MetaAssociation()</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimMetaDataMember">
            <summary>Shim type of System.Data.Linq.Mapping.MetaDataMember</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaDataMember.#ctor(System.Data.Linq.Mapping.MetaDataMember)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimMetaDataMember.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaDataMember.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaDataMember.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaDataMember.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaDataMember.Constructor">
            <summary>Sets the shim of MetaDataMember.MetaDataMember()</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimMetaFunction">
            <summary>Shim type of System.Data.Linq.Mapping.MetaFunction</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaFunction.#ctor(System.Data.Linq.Mapping.MetaFunction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimMetaFunction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaFunction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaFunction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaFunction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaFunction.Constructor">
            <summary>Sets the shim of MetaFunction.MetaFunction()</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimMetaModel">
            <summary>Shim type of System.Data.Linq.Mapping.MetaModel</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaModel.#ctor(System.Data.Linq.Mapping.MetaModel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimMetaModel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaModel.AllInstances.IdentityGet">
            <summary>Sets the shim of MetaModel.get_Identity()</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaModel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaModel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaModel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaModel.Constructor">
            <summary>Sets the shim of MetaModel.MetaModel()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaModel.IdentityGet">
            <summary>Sets the shim of MetaModel.get_Identity()</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimMetaParameter">
            <summary>Shim type of System.Data.Linq.Mapping.MetaParameter</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaParameter.#ctor(System.Data.Linq.Mapping.MetaParameter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimMetaParameter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaParameter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaParameter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaParameter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaParameter.Constructor">
            <summary>Sets the shim of MetaParameter.MetaParameter()</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimMetaTable">
            <summary>Shim type of System.Data.Linq.Mapping.MetaTable</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaTable.#ctor(System.Data.Linq.Mapping.MetaTable)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimMetaTable.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaTable.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaTable.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaTable.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaTable.Constructor">
            <summary>Sets the shim of MetaTable.MetaTable()</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimMetaType">
            <summary>Shim type of System.Data.Linq.Mapping.MetaType</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaType.#ctor(System.Data.Linq.Mapping.MetaType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimMetaType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimMetaType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimMetaType.Constructor">
            <summary>Sets the shim of MetaType.MetaType()</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimParameterAttribute">
            <summary>Shim type of System.Data.Linq.Mapping.ParameterAttribute</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimParameterAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimParameterAttribute.#ctor(System.Data.Linq.Mapping.ParameterAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimParameterAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimParameterAttribute.AllInstances.DbTypeGet">
            <summary>Sets the shim of ParameterAttribute.get_DbType()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimParameterAttribute.AllInstances.DbTypeSetString">
            <summary>Sets the shim of ParameterAttribute.set_DbType(String value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimParameterAttribute.AllInstances.NameGet">
            <summary>Sets the shim of ParameterAttribute.get_Name()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimParameterAttribute.AllInstances.NameSetString">
            <summary>Sets the shim of ParameterAttribute.set_Name(String value)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimParameterAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimParameterAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimParameterAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimParameterAttribute.Constructor">
            <summary>Sets the shim of ParameterAttribute.ParameterAttribute()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimParameterAttribute.DbTypeGet">
            <summary>Sets the shim of ParameterAttribute.get_DbType()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimParameterAttribute.DbTypeSetString">
            <summary>Sets the shim of ParameterAttribute.set_DbType(String value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimParameterAttribute.NameGet">
            <summary>Sets the shim of ParameterAttribute.get_Name()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimParameterAttribute.NameSetString">
            <summary>Sets the shim of ParameterAttribute.set_Name(String value)</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimProviderAttribute">
            <summary>Shim type of System.Data.Linq.Mapping.ProviderAttribute</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimProviderAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimProviderAttribute.#ctor(System.Data.Linq.Mapping.ProviderAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimProviderAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimProviderAttribute.AllInstances.TypeGet">
            <summary>Sets the shim of ProviderAttribute.get_Type()</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimProviderAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimProviderAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimProviderAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimProviderAttribute.Constructor">
            <summary>Sets the shim of ProviderAttribute.ProviderAttribute()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimProviderAttribute.ConstructorType">
            <summary>Sets the shim of ProviderAttribute.ProviderAttribute(Type type)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimProviderAttribute.TypeGet">
            <summary>Sets the shim of ProviderAttribute.get_Type()</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimResultTypeAttribute">
            <summary>Shim type of System.Data.Linq.Mapping.ResultTypeAttribute</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimResultTypeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimResultTypeAttribute.#ctor(System.Data.Linq.Mapping.ResultTypeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimResultTypeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimResultTypeAttribute.AllInstances.TypeGet">
            <summary>Sets the shim of ResultTypeAttribute.get_Type()</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimResultTypeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimResultTypeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimResultTypeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimResultTypeAttribute.ConstructorType">
            <summary>Sets the shim of ResultTypeAttribute.ResultTypeAttribute(Type type)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimResultTypeAttribute.TypeGet">
            <summary>Sets the shim of ResultTypeAttribute.get_Type()</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimTableAttribute">
            <summary>Shim type of System.Data.Linq.Mapping.TableAttribute</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimTableAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimTableAttribute.#ctor(System.Data.Linq.Mapping.TableAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimTableAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimTableAttribute.AllInstances.NameGet">
            <summary>Sets the shim of TableAttribute.get_Name()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimTableAttribute.AllInstances.NameSetString">
            <summary>Sets the shim of TableAttribute.set_Name(String value)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimTableAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimTableAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimTableAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimTableAttribute.Constructor">
            <summary>Sets the shim of TableAttribute.TableAttribute()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimTableAttribute.NameGet">
            <summary>Sets the shim of TableAttribute.get_Name()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimTableAttribute.NameSetString">
            <summary>Sets the shim of TableAttribute.set_Name(String value)</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimXmlMappingSource">
            <summary>Shim type of System.Data.Linq.Mapping.XmlMappingSource</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimXmlMappingSource.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimXmlMappingSource.#ctor(System.Data.Linq.Mapping.XmlMappingSource)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.ShimXmlMappingSource.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimXmlMappingSource.AllInstances.Constructor">
            <summary>Sets the shim of XmlMappingSource.XmlMappingSource()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimXmlMappingSource.AllInstances.CreateModelType">
            <summary>Sets the shim of XmlMappingSource.CreateModel(Type dataContextType)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimXmlMappingSource.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.ShimXmlMappingSource.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimXmlMappingSource.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimXmlMappingSource.Constructor">
            <summary>Sets the shim of XmlMappingSource.XmlMappingSource()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimXmlMappingSource.CreateModelType">
            <summary>Sets the shim of XmlMappingSource.CreateModel(Type dataContextType)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimXmlMappingSource.FromReaderXmlReader">
            <summary>Sets the shim of XmlMappingSource.FromReader(XmlReader reader)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimXmlMappingSource.FromStreamStream">
            <summary>Sets the shim of XmlMappingSource.FromStream(Stream stream)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimXmlMappingSource.FromUrlString">
            <summary>Sets the shim of XmlMappingSource.FromUrl(String url)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.ShimXmlMappingSource.FromXmlString">
            <summary>Sets the shim of XmlMappingSource.FromXml(String xml)</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.StubDataAttribute">
            <summary>Stub type of System.Data.Linq.Mapping.DataAttribute</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubDataAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubDataAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubDataAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubDataAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubDataAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubDataAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubDataAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubDataAttribute</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubDataAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubDataAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubDataAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubDataAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubDataAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubDataAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubDataAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubDataAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.StubMappingSource">
            <summary>Stub type of System.Data.Linq.Mapping.MappingSource</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMappingSource.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMappingSource.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMappingSource.CreateModel(System.Type)">
            <summary>Sets the stub of MappingSource.CreateModel(Type dataContextType)</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMappingSource.CreateModelType">
            <summary>Sets the stub of MappingSource.CreateModel(Type dataContextType)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMappingSource.InitializeStub">
            <summary>Initializes a new instance of type StubMappingSource</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMappingSource.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMappingSource.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.StubMetaAccessor">
            <summary>Stub type of System.Data.Linq.Mapping.MetaAccessor</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaAccessor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaAccessor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaAccessor.GetBoxedValue(System.Object)">
            <summary>Sets the stub of MetaAccessor.GetBoxedValue(Object instance)</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAccessor.GetBoxedValueObject">
            <summary>Sets the stub of MetaAccessor.GetBoxedValue(Object instance)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaAccessor.HasAssignedValue(System.Object)">
            <summary>Sets the stub of MetaAccessor.HasAssignedValue(Object instance)</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAccessor.HasAssignedValueObject">
            <summary>Sets the stub of MetaAccessor.HasAssignedValue(Object instance)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaAccessor.HasLoadedValue(System.Object)">
            <summary>Sets the stub of MetaAccessor.HasLoadedValue(Object instance)</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAccessor.HasLoadedValueObject">
            <summary>Sets the stub of MetaAccessor.HasLoadedValue(Object instance)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaAccessor.HasValue(System.Object)">
            <summary>Sets the stub of MetaAccessor.HasValue(Object instance)</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAccessor.HasValueObject">
            <summary>Sets the stub of MetaAccessor.HasValue(Object instance)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaAccessor.InitializeStub">
            <summary>Initializes a new instance of type StubMetaAccessor</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaAccessor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaAccessor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaAccessor.SetBoxedValue(System.Object@,System.Object)">
            <summary>Sets the stub of MetaAccessor.SetBoxedValue(Object&amp; instance, Object value)</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAccessor.SetBoxedValueObjectRefObject">
            <summary>Sets the stub of MetaAccessor.SetBoxedValue(Object&amp; instance, Object value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaAccessor.Type">
            <summary>Sets the stub of MetaAccessor.get_Type()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAccessor.TypeGet">
            <summary>Sets the stub of MetaAccessor.get_Type()</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.StubMetaAccessor`2">
            <summary>Stub type of System.Data.Linq.Mapping.MetaAccessor`2</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaAccessor`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaAccessor`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaAccessor`2.GetBoxedValue(System.Object)">
            <summary>Sets the stub of MetaAccessor`2.GetBoxedValue(Object instance)</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAccessor`2.GetBoxedValueObject">
            <summary>Sets the stub of MetaAccessor`2.GetBoxedValue(Object instance)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaAccessor`2.GetValue(`0)">
            <summary>Sets the stub of MetaAccessor`2.GetValue(!0 instance)</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAccessor`2.GetValueT0">
            <summary>Sets the stub of MetaAccessor`2.GetValue(!0 instance)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaAccessor`2.HasAssignedValue(System.Object)">
            <summary>Sets the stub of MetaAccessor.HasAssignedValue(Object instance)</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAccessor`2.HasAssignedValueObject">
            <summary>Sets the stub of MetaAccessor.HasAssignedValue(Object instance)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaAccessor`2.HasLoadedValue(System.Object)">
            <summary>Sets the stub of MetaAccessor.HasLoadedValue(Object instance)</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAccessor`2.HasLoadedValueObject">
            <summary>Sets the stub of MetaAccessor.HasLoadedValue(Object instance)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaAccessor`2.HasValue(System.Object)">
            <summary>Sets the stub of MetaAccessor.HasValue(Object instance)</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAccessor`2.HasValueObject">
            <summary>Sets the stub of MetaAccessor.HasValue(Object instance)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaAccessor`2.InitializeStub">
            <summary>Initializes a new instance of type StubMetaAccessor</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaAccessor`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaAccessor`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaAccessor`2.SetBoxedValue(System.Object@,System.Object)">
            <summary>Sets the stub of MetaAccessor`2.SetBoxedValue(Object&amp; instance, Object value)</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAccessor`2.SetBoxedValueObjectRefObject">
            <summary>Sets the stub of MetaAccessor`2.SetBoxedValue(Object&amp; instance, Object value)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaAccessor`2.SetValue(`0@,`1)">
            <summary>Sets the stub of MetaAccessor`2.SetValue(!0&amp; instance, !1 value)</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAccessor`2.SetValueT0RefT1">
            <summary>Sets the stub of MetaAccessor`2.SetValue(!0&amp; instance, !1 value)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaAccessor`2.Type">
            <summary>Sets the stub of MetaAccessor`2.get_Type()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAccessor`2.TypeGet">
            <summary>Sets the stub of MetaAccessor`2.get_Type()</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.StubMetaAssociation">
            <summary>Stub type of System.Data.Linq.Mapping.MetaAssociation</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.DeleteOnNull">
            <summary>Sets the stub of MetaAssociation.get_DeleteOnNull()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.DeleteOnNullGet">
            <summary>Sets the stub of MetaAssociation.get_DeleteOnNull()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.DeleteRule">
            <summary>Sets the stub of MetaAssociation.get_DeleteRule()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.DeleteRuleGet">
            <summary>Sets the stub of MetaAssociation.get_DeleteRule()</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.InitializeStub">
            <summary>Initializes a new instance of type StubMetaAssociation</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.IsForeignKey">
            <summary>Sets the stub of MetaAssociation.get_IsForeignKey()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.IsForeignKeyGet">
            <summary>Sets the stub of MetaAssociation.get_IsForeignKey()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.IsMany">
            <summary>Sets the stub of MetaAssociation.get_IsMany()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.IsManyGet">
            <summary>Sets the stub of MetaAssociation.get_IsMany()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.IsNullable">
            <summary>Sets the stub of MetaAssociation.get_IsNullable()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.IsNullableGet">
            <summary>Sets the stub of MetaAssociation.get_IsNullable()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.IsUnique">
            <summary>Sets the stub of MetaAssociation.get_IsUnique()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.IsUniqueGet">
            <summary>Sets the stub of MetaAssociation.get_IsUnique()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.OtherKey">
            <summary>Sets the stub of MetaAssociation.get_OtherKey()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.OtherKeyGet">
            <summary>Sets the stub of MetaAssociation.get_OtherKey()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.OtherKeyIsPrimaryKey">
            <summary>Sets the stub of MetaAssociation.get_OtherKeyIsPrimaryKey()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.OtherKeyIsPrimaryKeyGet">
            <summary>Sets the stub of MetaAssociation.get_OtherKeyIsPrimaryKey()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.OtherMember">
            <summary>Sets the stub of MetaAssociation.get_OtherMember()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.OtherMemberGet">
            <summary>Sets the stub of MetaAssociation.get_OtherMember()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.OtherType">
            <summary>Sets the stub of MetaAssociation.get_OtherType()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.OtherTypeGet">
            <summary>Sets the stub of MetaAssociation.get_OtherType()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.ThisKey">
            <summary>Sets the stub of MetaAssociation.get_ThisKey()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.ThisKeyGet">
            <summary>Sets the stub of MetaAssociation.get_ThisKey()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.ThisKeyIsPrimaryKey">
            <summary>Sets the stub of MetaAssociation.get_ThisKeyIsPrimaryKey()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.ThisKeyIsPrimaryKeyGet">
            <summary>Sets the stub of MetaAssociation.get_ThisKeyIsPrimaryKey()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.ThisMember">
            <summary>Sets the stub of MetaAssociation.get_ThisMember()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaAssociation.ThisMemberGet">
            <summary>Sets the stub of MetaAssociation.get_ThisMember()</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.StubMetaDataMember">
            <summary>Stub type of System.Data.Linq.Mapping.MetaDataMember</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.Association">
            <summary>Sets the stub of MetaDataMember.get_Association()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.AssociationGet">
            <summary>Sets the stub of MetaDataMember.get_Association()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.AutoSync">
            <summary>Sets the stub of MetaDataMember.get_AutoSync()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.AutoSyncGet">
            <summary>Sets the stub of MetaDataMember.get_AutoSync()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.CanBeNull">
            <summary>Sets the stub of MetaDataMember.get_CanBeNull()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.CanBeNullGet">
            <summary>Sets the stub of MetaDataMember.get_CanBeNull()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.DbType">
            <summary>Sets the stub of MetaDataMember.get_DbType()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.DbTypeGet">
            <summary>Sets the stub of MetaDataMember.get_DbType()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.DeclaringType">
            <summary>Sets the stub of MetaDataMember.get_DeclaringType()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.DeclaringTypeGet">
            <summary>Sets the stub of MetaDataMember.get_DeclaringType()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.DeferredSourceAccessor">
            <summary>Sets the stub of MetaDataMember.get_DeferredSourceAccessor()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.DeferredSourceAccessorGet">
            <summary>Sets the stub of MetaDataMember.get_DeferredSourceAccessor()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.DeferredValueAccessor">
            <summary>Sets the stub of MetaDataMember.get_DeferredValueAccessor()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.DeferredValueAccessorGet">
            <summary>Sets the stub of MetaDataMember.get_DeferredValueAccessor()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.Expression">
            <summary>Sets the stub of MetaDataMember.get_Expression()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.ExpressionGet">
            <summary>Sets the stub of MetaDataMember.get_Expression()</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.InitializeStub">
            <summary>Initializes a new instance of type StubMetaDataMember</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.IsAssociation">
            <summary>Sets the stub of MetaDataMember.get_IsAssociation()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.IsAssociationGet">
            <summary>Sets the stub of MetaDataMember.get_IsAssociation()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.IsDbGenerated">
            <summary>Sets the stub of MetaDataMember.get_IsDbGenerated()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.IsDbGeneratedGet">
            <summary>Sets the stub of MetaDataMember.get_IsDbGenerated()</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)">
            <summary>Sets the stub of MetaDataMember.IsDeclaredBy(MetaType type)</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.IsDeclaredByMetaType">
            <summary>Sets the stub of MetaDataMember.IsDeclaredBy(MetaType type)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.IsDeferred">
            <summary>Sets the stub of MetaDataMember.get_IsDeferred()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.IsDeferredGet">
            <summary>Sets the stub of MetaDataMember.get_IsDeferred()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.IsDiscriminator">
            <summary>Sets the stub of MetaDataMember.get_IsDiscriminator()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.IsDiscriminatorGet">
            <summary>Sets the stub of MetaDataMember.get_IsDiscriminator()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.IsPersistent">
            <summary>Sets the stub of MetaDataMember.get_IsPersistent()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.IsPersistentGet">
            <summary>Sets the stub of MetaDataMember.get_IsPersistent()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.IsPrimaryKey">
            <summary>Sets the stub of MetaDataMember.get_IsPrimaryKey()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.IsPrimaryKeyGet">
            <summary>Sets the stub of MetaDataMember.get_IsPrimaryKey()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.IsVersion">
            <summary>Sets the stub of MetaDataMember.get_IsVersion()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.IsVersionGet">
            <summary>Sets the stub of MetaDataMember.get_IsVersion()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.LoadMethod">
            <summary>Sets the stub of MetaDataMember.get_LoadMethod()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.LoadMethodGet">
            <summary>Sets the stub of MetaDataMember.get_LoadMethod()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.MappedName">
            <summary>Sets the stub of MetaDataMember.get_MappedName()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.MappedNameGet">
            <summary>Sets the stub of MetaDataMember.get_MappedName()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.Member">
            <summary>Sets the stub of MetaDataMember.get_Member()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.MemberAccessor">
            <summary>Sets the stub of MetaDataMember.get_MemberAccessor()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.MemberAccessorGet">
            <summary>Sets the stub of MetaDataMember.get_MemberAccessor()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.MemberGet">
            <summary>Sets the stub of MetaDataMember.get_Member()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.Name">
            <summary>Sets the stub of MetaDataMember.get_Name()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.NameGet">
            <summary>Sets the stub of MetaDataMember.get_Name()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.Ordinal">
            <summary>Sets the stub of MetaDataMember.get_Ordinal()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.OrdinalGet">
            <summary>Sets the stub of MetaDataMember.get_Ordinal()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.StorageAccessor">
            <summary>Sets the stub of MetaDataMember.get_StorageAccessor()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.StorageAccessorGet">
            <summary>Sets the stub of MetaDataMember.get_StorageAccessor()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.StorageMember">
            <summary>Sets the stub of MetaDataMember.get_StorageMember()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.StorageMemberGet">
            <summary>Sets the stub of MetaDataMember.get_StorageMember()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.Type">
            <summary>Sets the stub of MetaDataMember.get_Type()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.TypeGet">
            <summary>Sets the stub of MetaDataMember.get_Type()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.UpdateCheck">
            <summary>Sets the stub of MetaDataMember.get_UpdateCheck()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaDataMember.UpdateCheckGet">
            <summary>Sets the stub of MetaDataMember.get_UpdateCheck()</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.StubMetaFunction">
            <summary>Stub type of System.Data.Linq.Mapping.MetaFunction</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaFunction.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaFunction.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaFunction.HasMultipleResults">
            <summary>Sets the stub of MetaFunction.get_HasMultipleResults()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaFunction.HasMultipleResultsGet">
            <summary>Sets the stub of MetaFunction.get_HasMultipleResults()</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaFunction.InitializeStub">
            <summary>Initializes a new instance of type StubMetaFunction</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaFunction.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaFunction.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaFunction.IsComposable">
            <summary>Sets the stub of MetaFunction.get_IsComposable()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaFunction.IsComposableGet">
            <summary>Sets the stub of MetaFunction.get_IsComposable()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaFunction.MappedName">
            <summary>Sets the stub of MetaFunction.get_MappedName()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaFunction.MappedNameGet">
            <summary>Sets the stub of MetaFunction.get_MappedName()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaFunction.Method">
            <summary>Sets the stub of MetaFunction.get_Method()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaFunction.MethodGet">
            <summary>Sets the stub of MetaFunction.get_Method()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaFunction.Model">
            <summary>Sets the stub of MetaFunction.get_Model()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaFunction.ModelGet">
            <summary>Sets the stub of MetaFunction.get_Model()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaFunction.Name">
            <summary>Sets the stub of MetaFunction.get_Name()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaFunction.NameGet">
            <summary>Sets the stub of MetaFunction.get_Name()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaFunction.Parameters">
            <summary>Sets the stub of MetaFunction.get_Parameters()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaFunction.ParametersGet">
            <summary>Sets the stub of MetaFunction.get_Parameters()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaFunction.ResultRowTypes">
            <summary>Sets the stub of MetaFunction.get_ResultRowTypes()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaFunction.ResultRowTypesGet">
            <summary>Sets the stub of MetaFunction.get_ResultRowTypes()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaFunction.ReturnParameter">
            <summary>Sets the stub of MetaFunction.get_ReturnParameter()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaFunction.ReturnParameterGet">
            <summary>Sets the stub of MetaFunction.get_ReturnParameter()</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.StubMetaModel">
            <summary>Stub type of System.Data.Linq.Mapping.MetaModel</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaModel.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaModel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaModel.ContextType">
            <summary>Sets the stub of MetaModel.get_ContextType()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaModel.ContextTypeGet">
            <summary>Sets the stub of MetaModel.get_ContextType()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaModel.DatabaseName">
            <summary>Sets the stub of MetaModel.get_DatabaseName()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaModel.DatabaseNameGet">
            <summary>Sets the stub of MetaModel.get_DatabaseName()</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaModel.GetFunction(System.Reflection.MethodInfo)">
            <summary>Sets the stub of MetaModel.GetFunction(MethodInfo method)</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaModel.GetFunctionMethodInfo">
            <summary>Sets the stub of MetaModel.GetFunction(MethodInfo method)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaModel.GetFunctions">
            <summary>Sets the stub of MetaModel.GetFunctions()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaModel.GetFunctions01">
            <summary>Sets the stub of MetaModel.GetFunctions()</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaModel.GetMetaType(System.Type)">
            <summary>Sets the stub of MetaModel.GetMetaType(Type type)</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaModel.GetMetaTypeType">
            <summary>Sets the stub of MetaModel.GetMetaType(Type type)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaModel.GetTable(System.Type)">
            <summary>Sets the stub of MetaModel.GetTable(Type rowType)</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaModel.GetTableType">
            <summary>Sets the stub of MetaModel.GetTable(Type rowType)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaModel.GetTables">
            <summary>Sets the stub of MetaModel.GetTables()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaModel.GetTables01">
            <summary>Sets the stub of MetaModel.GetTables()</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaModel.InitializeStub">
            <summary>Initializes a new instance of type StubMetaModel</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaModel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaModel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaModel.MappingSource">
            <summary>Sets the stub of MetaModel.get_MappingSource()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaModel.MappingSourceGet">
            <summary>Sets the stub of MetaModel.get_MappingSource()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaModel.ProviderType">
            <summary>Sets the stub of MetaModel.get_ProviderType()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaModel.ProviderTypeGet">
            <summary>Sets the stub of MetaModel.get_ProviderType()</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.StubMetaParameter">
            <summary>Stub type of System.Data.Linq.Mapping.MetaParameter</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaParameter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaParameter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaParameter.DbType">
            <summary>Sets the stub of MetaParameter.get_DbType()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaParameter.DbTypeGet">
            <summary>Sets the stub of MetaParameter.get_DbType()</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaParameter.InitializeStub">
            <summary>Initializes a new instance of type StubMetaParameter</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaParameter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaParameter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaParameter.MappedName">
            <summary>Sets the stub of MetaParameter.get_MappedName()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaParameter.MappedNameGet">
            <summary>Sets the stub of MetaParameter.get_MappedName()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaParameter.Name">
            <summary>Sets the stub of MetaParameter.get_Name()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaParameter.NameGet">
            <summary>Sets the stub of MetaParameter.get_Name()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaParameter.Parameter">
            <summary>Sets the stub of MetaParameter.get_Parameter()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaParameter.ParameterGet">
            <summary>Sets the stub of MetaParameter.get_Parameter()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaParameter.ParameterType">
            <summary>Sets the stub of MetaParameter.get_ParameterType()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaParameter.ParameterTypeGet">
            <summary>Sets the stub of MetaParameter.get_ParameterType()</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.StubMetaTable">
            <summary>Stub type of System.Data.Linq.Mapping.MetaTable</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaTable.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaTable.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaTable.DeleteMethod">
            <summary>Sets the stub of MetaTable.get_DeleteMethod()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaTable.DeleteMethodGet">
            <summary>Sets the stub of MetaTable.get_DeleteMethod()</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaTable.InitializeStub">
            <summary>Initializes a new instance of type StubMetaTable</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaTable.InsertMethod">
            <summary>Sets the stub of MetaTable.get_InsertMethod()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaTable.InsertMethodGet">
            <summary>Sets the stub of MetaTable.get_InsertMethod()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaTable.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaTable.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaTable.Model">
            <summary>Sets the stub of MetaTable.get_Model()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaTable.ModelGet">
            <summary>Sets the stub of MetaTable.get_Model()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaTable.RowType">
            <summary>Sets the stub of MetaTable.get_RowType()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaTable.RowTypeGet">
            <summary>Sets the stub of MetaTable.get_RowType()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaTable.TableName">
            <summary>Sets the stub of MetaTable.get_TableName()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaTable.TableNameGet">
            <summary>Sets the stub of MetaTable.get_TableName()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaTable.UpdateMethod">
            <summary>Sets the stub of MetaTable.get_UpdateMethod()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaTable.UpdateMethodGet">
            <summary>Sets the stub of MetaTable.get_UpdateMethod()</summary>
        </member>
        <member name="T:System.Data.Linq.Mapping.Fakes.StubMetaType">
            <summary>Stub type of System.Data.Linq.Mapping.MetaType</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaType.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.Associations">
            <summary>Sets the stub of MetaType.get_Associations()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.AssociationsGet">
            <summary>Sets the stub of MetaType.get_Associations()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.CanInstantiate">
            <summary>Sets the stub of MetaType.get_CanInstantiate()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.CanInstantiateGet">
            <summary>Sets the stub of MetaType.get_CanInstantiate()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.DBGeneratedIdentityMember">
            <summary>Sets the stub of MetaType.get_DBGeneratedIdentityMember()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.DBGeneratedIdentityMemberGet">
            <summary>Sets the stub of MetaType.get_DBGeneratedIdentityMember()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.DataMembers">
            <summary>Sets the stub of MetaType.get_DataMembers()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.DataMembersGet">
            <summary>Sets the stub of MetaType.get_DataMembers()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.DerivedTypes">
            <summary>Sets the stub of MetaType.get_DerivedTypes()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.DerivedTypesGet">
            <summary>Sets the stub of MetaType.get_DerivedTypes()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.Discriminator">
            <summary>Sets the stub of MetaType.get_Discriminator()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.DiscriminatorGet">
            <summary>Sets the stub of MetaType.get_Discriminator()</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaType.GetDataMember(System.Reflection.MemberInfo)">
            <summary>Sets the stub of MetaType.GetDataMember(MemberInfo member)</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.GetDataMemberMemberInfo">
            <summary>Sets the stub of MetaType.GetDataMember(MemberInfo member)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaType.GetInheritanceType(System.Type)">
            <summary>Sets the stub of MetaType.GetInheritanceType(Type type)</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.GetInheritanceTypeType">
            <summary>Sets the stub of MetaType.GetInheritanceType(Type type)</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaType.GetTypeForInheritanceCode(System.Object)">
            <summary>Sets the stub of MetaType.GetTypeForInheritanceCode(Object code)</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.GetTypeForInheritanceCodeObject">
            <summary>Sets the stub of MetaType.GetTypeForInheritanceCode(Object code)</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.HasAnyLoadMethod">
            <summary>Sets the stub of MetaType.get_HasAnyLoadMethod()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.HasAnyLoadMethodGet">
            <summary>Sets the stub of MetaType.get_HasAnyLoadMethod()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.HasAnyValidateMethod">
            <summary>Sets the stub of MetaType.get_HasAnyValidateMethod()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.HasAnyValidateMethodGet">
            <summary>Sets the stub of MetaType.get_HasAnyValidateMethod()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.HasInheritance">
            <summary>Sets the stub of MetaType.get_HasInheritance()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.HasInheritanceCode">
            <summary>Sets the stub of MetaType.get_HasInheritanceCode()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.HasInheritanceCodeGet">
            <summary>Sets the stub of MetaType.get_HasInheritanceCode()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.HasInheritanceGet">
            <summary>Sets the stub of MetaType.get_HasInheritance()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.HasUpdateCheck">
            <summary>Sets the stub of MetaType.get_HasUpdateCheck()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.HasUpdateCheckGet">
            <summary>Sets the stub of MetaType.get_HasUpdateCheck()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.IdentityMembers">
            <summary>Sets the stub of MetaType.get_IdentityMembers()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.IdentityMembersGet">
            <summary>Sets the stub of MetaType.get_IdentityMembers()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.InheritanceBase">
            <summary>Sets the stub of MetaType.get_InheritanceBase()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.InheritanceBaseGet">
            <summary>Sets the stub of MetaType.get_InheritanceBase()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.InheritanceCode">
            <summary>Sets the stub of MetaType.get_InheritanceCode()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.InheritanceCodeGet">
            <summary>Sets the stub of MetaType.get_InheritanceCode()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.InheritanceDefault">
            <summary>Sets the stub of MetaType.get_InheritanceDefault()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.InheritanceDefaultGet">
            <summary>Sets the stub of MetaType.get_InheritanceDefault()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.InheritanceRoot">
            <summary>Sets the stub of MetaType.get_InheritanceRoot()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.InheritanceRootGet">
            <summary>Sets the stub of MetaType.get_InheritanceRoot()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.InheritanceTypes">
            <summary>Sets the stub of MetaType.get_InheritanceTypes()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.InheritanceTypesGet">
            <summary>Sets the stub of MetaType.get_InheritanceTypes()</summary>
        </member>
        <member name="M:System.Data.Linq.Mapping.Fakes.StubMetaType.InitializeStub">
            <summary>Initializes a new instance of type StubMetaType</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.IsEntity">
            <summary>Sets the stub of MetaType.get_IsEntity()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.IsEntityGet">
            <summary>Sets the stub of MetaType.get_IsEntity()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.IsInheritanceDefault">
            <summary>Sets the stub of MetaType.get_IsInheritanceDefault()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.IsInheritanceDefaultGet">
            <summary>Sets the stub of MetaType.get_IsInheritanceDefault()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.Model">
            <summary>Sets the stub of MetaType.get_Model()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.ModelGet">
            <summary>Sets the stub of MetaType.get_Model()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.Name">
            <summary>Sets the stub of MetaType.get_Name()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.NameGet">
            <summary>Sets the stub of MetaType.get_Name()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.OnLoadedMethod">
            <summary>Sets the stub of MetaType.get_OnLoadedMethod()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.OnLoadedMethodGet">
            <summary>Sets the stub of MetaType.get_OnLoadedMethod()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.OnValidateMethod">
            <summary>Sets the stub of MetaType.get_OnValidateMethod()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.OnValidateMethodGet">
            <summary>Sets the stub of MetaType.get_OnValidateMethod()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.PersistentDataMembers">
            <summary>Sets the stub of MetaType.get_PersistentDataMembers()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.PersistentDataMembersGet">
            <summary>Sets the stub of MetaType.get_PersistentDataMembers()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.Table">
            <summary>Sets the stub of MetaType.get_Table()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.TableGet">
            <summary>Sets the stub of MetaType.get_Table()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.Type">
            <summary>Sets the stub of MetaType.get_Type()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.TypeGet">
            <summary>Sets the stub of MetaType.get_Type()</summary>
        </member>
        <member name="P:System.Data.Linq.Mapping.Fakes.StubMetaType.VersionMember">
            <summary>Sets the stub of MetaType.get_VersionMember()</summary>
        </member>
        <member name="F:System.Data.Linq.Mapping.Fakes.StubMetaType.VersionMemberGet">
            <summary>Sets the stub of MetaType.get_VersionMember()</summary>
        </member>
        <member name="T:System.Data.Linq.SqlClient.Fakes.ShimSql2000Provider">
            <summary>Shim type of System.Data.Linq.SqlClient.Sql2000Provider</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSql2000Provider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSql2000Provider.#ctor(System.Data.Linq.SqlClient.Sql2000Provider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.SqlClient.Fakes.ShimSql2000Provider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSql2000Provider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSql2000Provider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSql2000Provider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSql2000Provider.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSql2000Provider.Constructor">
            <summary>Sets the shim of Sql2000Provider.Sql2000Provider()</summary>
        </member>
        <member name="T:System.Data.Linq.SqlClient.Fakes.ShimSql2005Provider">
            <summary>Shim type of System.Data.Linq.SqlClient.Sql2005Provider</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSql2005Provider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSql2005Provider.#ctor(System.Data.Linq.SqlClient.Sql2005Provider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.SqlClient.Fakes.ShimSql2005Provider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSql2005Provider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSql2005Provider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSql2005Provider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSql2005Provider.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSql2005Provider.Constructor">
            <summary>Sets the shim of Sql2005Provider.Sql2005Provider()</summary>
        </member>
        <member name="T:System.Data.Linq.SqlClient.Fakes.ShimSql2008Provider">
            <summary>Shim type of System.Data.Linq.SqlClient.Sql2008Provider</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSql2008Provider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSql2008Provider.#ctor(System.Data.Linq.SqlClient.Sql2008Provider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.SqlClient.Fakes.ShimSql2008Provider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSql2008Provider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSql2008Provider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSql2008Provider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSql2008Provider.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSql2008Provider.Constructor">
            <summary>Sets the shim of Sql2008Provider.Sql2008Provider()</summary>
        </member>
        <member name="T:System.Data.Linq.SqlClient.Fakes.ShimSqlHelpers">
            <summary>Shim type of System.Data.Linq.SqlClient.SqlHelpers</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSqlHelpers.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSqlHelpers.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSqlHelpers.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlHelpers.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlHelpers.GetStringContainsPatternForcedStringChar">
            <summary>Sets the shim of SqlHelpers.GetStringContainsPatternForced(String text, Char escape)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlHelpers.GetStringContainsPatternStringChar">
            <summary>Sets the shim of SqlHelpers.GetStringContainsPattern(String text, Char escape)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlHelpers.GetStringContainsPatternStringCharBooleanOut">
            <summary>Sets the shim of SqlHelpers.GetStringContainsPattern(String text, Char escape, Boolean&amp; usedEscapeChar)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlHelpers.GetStringEndsWithPatternForcedStringChar">
            <summary>Sets the shim of SqlHelpers.GetStringEndsWithPatternForced(String text, Char escape)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlHelpers.GetStringEndsWithPatternStringChar">
            <summary>Sets the shim of SqlHelpers.GetStringEndsWithPattern(String text, Char escape)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlHelpers.GetStringEndsWithPatternStringCharBooleanOut">
            <summary>Sets the shim of SqlHelpers.GetStringEndsWithPattern(String text, Char escape, Boolean&amp; usedEscapeChar)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlHelpers.GetStringStartsWithPatternForcedStringChar">
            <summary>Sets the shim of SqlHelpers.GetStringStartsWithPatternForced(String text, Char escape)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlHelpers.GetStringStartsWithPatternStringChar">
            <summary>Sets the shim of SqlHelpers.GetStringStartsWithPattern(String text, Char escape)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlHelpers.GetStringStartsWithPatternStringCharBooleanOut">
            <summary>Sets the shim of SqlHelpers.GetStringStartsWithPattern(String text, Char escape, Boolean&amp; usedEscapeChar)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlHelpers.TranslateVBLikePatternStringChar">
            <summary>Sets the shim of SqlHelpers.TranslateVBLikePattern(String pattern, Char escape)</summary>
        </member>
        <member name="T:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods">
            <summary>Shim type of System.Data.Linq.SqlClient.SqlMethods</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffDayDateTimeDateTime">
            <summary>Sets the shim of SqlMethods.DateDiffDay(DateTime startDate, DateTime endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffDayDateTimeOffsetDateTimeOffset">
            <summary>Sets the shim of SqlMethods.DateDiffDay(DateTimeOffset startDate, DateTimeOffset endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffDayNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of SqlMethods.DateDiffDay(Nullable`1&lt;DateTime&gt; startDate, Nullable`1&lt;DateTime&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffDayNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of SqlMethods.DateDiffDay(Nullable`1&lt;DateTimeOffset&gt; startDate, Nullable`1&lt;DateTimeOffset&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffHourDateTimeDateTime">
            <summary>Sets the shim of SqlMethods.DateDiffHour(DateTime startDate, DateTime endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffHourDateTimeOffsetDateTimeOffset">
            <summary>Sets the shim of SqlMethods.DateDiffHour(DateTimeOffset startDate, DateTimeOffset endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffHourNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of SqlMethods.DateDiffHour(Nullable`1&lt;DateTime&gt; startDate, Nullable`1&lt;DateTime&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffHourNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of SqlMethods.DateDiffHour(Nullable`1&lt;DateTimeOffset&gt; startDate, Nullable`1&lt;DateTimeOffset&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffMicrosecondDateTimeDateTime">
            <summary>Sets the shim of SqlMethods.DateDiffMicrosecond(DateTime startDate, DateTime endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffMicrosecondDateTimeOffsetDateTimeOffset">
            <summary>Sets the shim of SqlMethods.DateDiffMicrosecond(DateTimeOffset startDate, DateTimeOffset endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffMicrosecondNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of SqlMethods.DateDiffMicrosecond(Nullable`1&lt;DateTime&gt; startDate, Nullable`1&lt;DateTime&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffMicrosecondNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of SqlMethods.DateDiffMicrosecond(Nullable`1&lt;DateTimeOffset&gt; startDate, Nullable`1&lt;DateTimeOffset&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffMillisecondDateTimeDateTime">
            <summary>Sets the shim of SqlMethods.DateDiffMillisecond(DateTime startDate, DateTime endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffMillisecondDateTimeOffsetDateTimeOffset">
            <summary>Sets the shim of SqlMethods.DateDiffMillisecond(DateTimeOffset startDate, DateTimeOffset endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffMillisecondNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of SqlMethods.DateDiffMillisecond(Nullable`1&lt;DateTime&gt; startDate, Nullable`1&lt;DateTime&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffMillisecondNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of SqlMethods.DateDiffMillisecond(Nullable`1&lt;DateTimeOffset&gt; startDate, Nullable`1&lt;DateTimeOffset&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffMinuteDateTimeDateTime">
            <summary>Sets the shim of SqlMethods.DateDiffMinute(DateTime startDate, DateTime endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffMinuteDateTimeOffsetDateTimeOffset">
            <summary>Sets the shim of SqlMethods.DateDiffMinute(DateTimeOffset startDate, DateTimeOffset endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffMinuteNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of SqlMethods.DateDiffMinute(Nullable`1&lt;DateTime&gt; startDate, Nullable`1&lt;DateTime&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffMinuteNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of SqlMethods.DateDiffMinute(Nullable`1&lt;DateTimeOffset&gt; startDate, Nullable`1&lt;DateTimeOffset&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffMonthDateTimeDateTime">
            <summary>Sets the shim of SqlMethods.DateDiffMonth(DateTime startDate, DateTime endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffMonthDateTimeOffsetDateTimeOffset">
            <summary>Sets the shim of SqlMethods.DateDiffMonth(DateTimeOffset startDate, DateTimeOffset endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffMonthNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of SqlMethods.DateDiffMonth(Nullable`1&lt;DateTime&gt; startDate, Nullable`1&lt;DateTime&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffMonthNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of SqlMethods.DateDiffMonth(Nullable`1&lt;DateTimeOffset&gt; startDate, Nullable`1&lt;DateTimeOffset&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffNanosecondDateTimeDateTime">
            <summary>Sets the shim of SqlMethods.DateDiffNanosecond(DateTime startDate, DateTime endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffNanosecondDateTimeOffsetDateTimeOffset">
            <summary>Sets the shim of SqlMethods.DateDiffNanosecond(DateTimeOffset startDate, DateTimeOffset endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffNanosecondNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of SqlMethods.DateDiffNanosecond(Nullable`1&lt;DateTime&gt; startDate, Nullable`1&lt;DateTime&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffNanosecondNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of SqlMethods.DateDiffNanosecond(Nullable`1&lt;DateTimeOffset&gt; startDate, Nullable`1&lt;DateTimeOffset&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffSecondDateTimeDateTime">
            <summary>Sets the shim of SqlMethods.DateDiffSecond(DateTime startDate, DateTime endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffSecondDateTimeOffsetDateTimeOffset">
            <summary>Sets the shim of SqlMethods.DateDiffSecond(DateTimeOffset startDate, DateTimeOffset endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffSecondNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of SqlMethods.DateDiffSecond(Nullable`1&lt;DateTime&gt; startDate, Nullable`1&lt;DateTime&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffSecondNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of SqlMethods.DateDiffSecond(Nullable`1&lt;DateTimeOffset&gt; startDate, Nullable`1&lt;DateTimeOffset&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffYearDateTimeDateTime">
            <summary>Sets the shim of SqlMethods.DateDiffYear(DateTime startDate, DateTime endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffYearDateTimeOffsetDateTimeOffset">
            <summary>Sets the shim of SqlMethods.DateDiffYear(DateTimeOffset startDate, DateTimeOffset endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffYearNullableOfDateTimeNullableOfDateTime">
            <summary>Sets the shim of SqlMethods.DateDiffYear(Nullable`1&lt;DateTime&gt; startDate, Nullable`1&lt;DateTime&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.DateDiffYearNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of SqlMethods.DateDiffYear(Nullable`1&lt;DateTimeOffset&gt; startDate, Nullable`1&lt;DateTimeOffset&gt; endDate)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.LikeStringString">
            <summary>Sets the shim of SqlMethods.Like(String matchExpression, String pattern)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.LikeStringStringChar">
            <summary>Sets the shim of SqlMethods.Like(String matchExpression, String pattern, Char escapeCharacter)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.RawLengthBinary">
            <summary>Sets the shim of SqlMethods.RawLength(Binary value)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.RawLengthByteArray">
            <summary>Sets the shim of SqlMethods.RawLength(Byte[] value)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlMethods.RawLengthString">
            <summary>Sets the shim of SqlMethods.RawLength(String value)</summary>
        </member>
        <member name="T:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider">
            <summary>Shim type of System.Data.Linq.SqlClient.SqlProvider</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.#ctor(System.Data.Linq.SqlClient.SqlProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.CheckDispose">
            <summary>Sets the shim of SqlProvider.CheckDispose()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.CheckQueriesGet">
            <summary>Sets the shim of SqlProvider.get_CheckQueries()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.CheckQueriesSetBoolean">
            <summary>Sets the shim of SqlProvider.set_CheckQueries(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.CommandTimeoutSystemDataLinqProviderIProviderget">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.get_CommandTimeout()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.CommandTimeoutSystemDataLinqProviderIProvidersetInt32">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.set_CommandTimeout(Int32 value)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.ConnectionSystemDataLinqProviderIProviderget">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.get_Connection()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.Dispose">
            <summary>Sets the shim of SqlProvider.Dispose()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SqlProvider.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.EnableCacheLookupGet">
            <summary>Sets the shim of SqlProvider.get_EnableCacheLookup()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.EnableCacheLookupSetBoolean">
            <summary>Sets the shim of SqlProvider.set_EnableCacheLookup(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.LogSystemDataLinqProviderIProviderget">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.get_Log()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.LogSystemDataLinqProviderIProvidersetTextWriter">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.set_Log(TextWriter value)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.MaxUsersGet">
            <summary>Sets the shim of SqlProvider.get_MaxUsers()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.QueryCountGet">
            <summary>Sets the shim of SqlProvider.get_QueryCount()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.SystemDataLinqProviderIProviderClearConnection">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.ClearConnection()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.SystemDataLinqProviderIProviderCreateDatabase">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.CreateDatabase()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.SystemDataLinqProviderIProviderDatabaseExists">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.DatabaseExists()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.SystemDataLinqProviderIProviderDeleteDatabase">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.DeleteDatabase()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.SystemDataLinqProviderIProviderExecuteExpression">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.Execute(Expression query)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.SystemDataLinqProviderIProviderGetCommandExpression">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.GetCommand(Expression query)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.SystemDataLinqProviderIProviderGetQueryTextExpression">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.GetQueryText(Expression query)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.SystemDataLinqProviderIProviderTranslateDbDataReader">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.Translate(DbDataReader reader)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.SystemDataLinqProviderIProviderTranslateTypeDbDataReader">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.Translate(Type elementType, DbDataReader reader)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.SystemDataLinqSqlClientIConnectionUserCompleteUse">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.SqlClient.IConnectionUser.CompleteUse()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.TransactionSystemDataLinqProviderIProviderget">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.get_Transaction()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.AllInstances.TransactionSystemDataLinqProviderIProvidersetDbTransaction">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.set_Transaction(DbTransaction value)</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.CheckDispose">
            <summary>Sets the shim of SqlProvider.CheckDispose()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.CheckQueriesGet">
            <summary>Sets the shim of SqlProvider.get_CheckQueries()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.CheckQueriesSetBoolean">
            <summary>Sets the shim of SqlProvider.set_CheckQueries(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.CommandTimeoutSystemDataLinqProviderIProviderget">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.get_CommandTimeout()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.CommandTimeoutSystemDataLinqProviderIProvidersetInt32">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.set_CommandTimeout(Int32 value)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.ConnectionSystemDataLinqProviderIProviderget">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.get_Connection()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.Constructor">
            <summary>Sets the shim of SqlProvider.SqlProvider()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.Dispose">
            <summary>Sets the shim of SqlProvider.Dispose()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.DisposeBoolean">
            <summary>Sets the shim of SqlProvider.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.EnableCacheLookupGet">
            <summary>Sets the shim of SqlProvider.get_EnableCacheLookup()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.EnableCacheLookupSetBoolean">
            <summary>Sets the shim of SqlProvider.set_EnableCacheLookup(Boolean value)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.LogSystemDataLinqProviderIProviderget">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.get_Log()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.LogSystemDataLinqProviderIProvidersetTextWriter">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.set_Log(TextWriter value)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.MaxUsersGet">
            <summary>Sets the shim of SqlProvider.get_MaxUsers()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.QueryCountGet">
            <summary>Sets the shim of SqlProvider.get_QueryCount()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.SystemDataLinqProviderIProviderClearConnection">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.ClearConnection()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.SystemDataLinqProviderIProviderCreateDatabase">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.CreateDatabase()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.SystemDataLinqProviderIProviderDatabaseExists">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.DatabaseExists()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.SystemDataLinqProviderIProviderDeleteDatabase">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.DeleteDatabase()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.SystemDataLinqProviderIProviderExecuteExpression">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.Execute(Expression query)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.SystemDataLinqProviderIProviderGetCommandExpression">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.GetCommand(Expression query)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.SystemDataLinqProviderIProviderGetQueryTextExpression">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.GetQueryText(Expression query)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.SystemDataLinqProviderIProviderTranslateDbDataReader">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.Translate(DbDataReader reader)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.SystemDataLinqProviderIProviderTranslateTypeDbDataReader">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.Translate(Type elementType, DbDataReader reader)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.SystemDataLinqSqlClientIConnectionUserCompleteUse">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.SqlClient.IConnectionUser.CompleteUse()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.TransactionSystemDataLinqProviderIProviderget">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.get_Transaction()</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.ShimSqlProvider.TransactionSystemDataLinqProviderIProvidersetDbTransaction">
            <summary>Sets the shim of SqlProvider.System.Data.Linq.Provider.IProvider.set_Transaction(DbTransaction value)</summary>
        </member>
        <member name="T:System.Data.Linq.SqlClient.Fakes.StubSqlProvider">
            <summary>Stub type of System.Data.Linq.SqlClient.SqlProvider</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.StubSqlProvider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.StubSqlProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.StubSqlProvider.Dispose(System.Boolean)">
            <summary>Sets the stub of SqlProvider.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Data.Linq.SqlClient.Fakes.StubSqlProvider.DisposeBoolean">
            <summary>Sets the stub of SqlProvider.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Fakes.StubSqlProvider.InitializeStub">
            <summary>Initializes a new instance of type StubSqlProvider</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.StubSqlProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Fakes.StubSqlProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.Linq.SqlClient.Implementation.Fakes.ShimObjectMaterializer`1">
            <summary>Shim type of System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Implementation.Fakes.ShimObjectMaterializer`1.#ctor(System.Data.Linq.SqlClient.Implementation.ObjectMaterializer{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:System.Data.Linq.SqlClient.Implementation.Fakes.ShimObjectMaterializer`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Implementation.Fakes.ShimObjectMaterializer`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Implementation.Fakes.ShimObjectMaterializer`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Implementation.Fakes.ShimObjectMaterializer`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Implementation.Fakes.ShimObjectMaterializer`1.Constructor">
            <summary>Sets the shim of ObjectMaterializer`1.ObjectMaterializer`1()</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Implementation.Fakes.ShimObjectMaterializer`1.ConvertOf1IEnumerable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.IEnumerable,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of ObjectMaterializer`1.Convert(IEnumerable source)</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Implementation.Fakes.ShimObjectMaterializer`1.CreateGroupOf2M0IEnumerableOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Collections.Generic.IEnumerable{``1},System.Linq.IGrouping{``0,``1}})">
            <summary>Sets the shim of ObjectMaterializer`1.CreateGroup(!!0 key, IEnumerable`1&lt;!!1&gt; items)</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Implementation.Fakes.ShimObjectMaterializer`1.CreateOrderedEnumerableOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Linq.IOrderedEnumerable{``0}})">
            <summary>Sets the shim of ObjectMaterializer`1.CreateOrderedEnumerable(IEnumerable`1&lt;!!0&gt; items)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Implementation.Fakes.ShimObjectMaterializer`1.ErrorAssignmentToNullType">
            <summary>Sets the shim of ObjectMaterializer`1.ErrorAssignmentToNull(Type type)</summary>
        </member>
        <member name="T:System.Data.Linq.SqlClient.Implementation.Fakes.StubObjectMaterializer`1">
            <summary>Stub type of System.Data.Linq.SqlClient.Implementation.ObjectMaterializer`1</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Implementation.Fakes.StubObjectMaterializer`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Implementation.Fakes.StubObjectMaterializer`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Implementation.Fakes.StubObjectMaterializer`1.CanDeferLoad">
            <summary>Sets the stub of ObjectMaterializer`1.get_CanDeferLoad()</summary>
        </member>
        <member name="F:System.Data.Linq.SqlClient.Implementation.Fakes.StubObjectMaterializer`1.CanDeferLoadGet">
            <summary>Sets the stub of ObjectMaterializer`1.get_CanDeferLoad()</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Implementation.Fakes.StubObjectMaterializer`1.ExecuteSubQuery(System.Int32,System.Object[])">
            <summary>Sets the stub of ObjectMaterializer`1.ExecuteSubQuery(Int32 iSubQuery, Object[] args)</summary>
        </member>
        <member name="F:System.Data.Linq.SqlClient.Implementation.Fakes.StubObjectMaterializer`1.ExecuteSubQueryInt32ObjectArray">
            <summary>Sets the stub of ObjectMaterializer`1.ExecuteSubQuery(Int32 iSubQuery, Object[] args)</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Implementation.Fakes.StubObjectMaterializer`1.GetLinkSource``1(System.Int32,System.Int32,System.Object[])">
            <summary>Sets the stub of ObjectMaterializer`1.GetLinkSource(Int32 globalLink, Int32 localFactory, Object[] keyValues)</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Implementation.Fakes.StubObjectMaterializer`1.GetLinkSourceOf1Int32Int32ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,System.Object[],System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets stubs of GetLinkSource(Int32 globalLink, Int32 localFactory, Object[] keyValues)</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Implementation.Fakes.StubObjectMaterializer`1.GetNestedLinkSource``1(System.Int32,System.Int32,System.Object)">
            <summary>Sets the stub of ObjectMaterializer`1.GetNestedLinkSource(Int32 globalLink, Int32 localFactory, Object instance)</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Implementation.Fakes.StubObjectMaterializer`1.GetNestedLinkSourceOf1Int32Int32Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.Int32,System.Object,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets stubs of GetNestedLinkSource(Int32 globalLink, Int32 localFactory, Object instance)</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Implementation.Fakes.StubObjectMaterializer`1.InitializeStub">
            <summary>Initializes a new instance of type StubObjectMaterializer</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Implementation.Fakes.StubObjectMaterializer`1.InsertLookup(System.Int32,System.Object)">
            <summary>Sets the stub of ObjectMaterializer`1.InsertLookup(Int32 globalMetaType, Object instance)</summary>
        </member>
        <member name="F:System.Data.Linq.SqlClient.Implementation.Fakes.StubObjectMaterializer`1.InsertLookupInt32Object">
            <summary>Sets the stub of ObjectMaterializer`1.InsertLookup(Int32 globalMetaType, Object instance)</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Implementation.Fakes.StubObjectMaterializer`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.Linq.SqlClient.Implementation.Fakes.StubObjectMaterializer`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Implementation.Fakes.StubObjectMaterializer`1.Read">
            <summary>Sets the stub of ObjectMaterializer`1.Read()</summary>
        </member>
        <member name="F:System.Data.Linq.SqlClient.Implementation.Fakes.StubObjectMaterializer`1.Read01">
            <summary>Sets the stub of ObjectMaterializer`1.Read()</summary>
        </member>
        <member name="M:System.Data.Linq.SqlClient.Implementation.Fakes.StubObjectMaterializer`1.SendEntityMaterialized(System.Int32,System.Object)">
            <summary>Sets the stub of ObjectMaterializer`1.SendEntityMaterialized(Int32 globalMetaType, Object instance)</summary>
        </member>
        <member name="F:System.Data.Linq.SqlClient.Implementation.Fakes.StubObjectMaterializer`1.SendEntityMaterializedInt32Object">
            <summary>Sets the stub of ObjectMaterializer`1.SendEntityMaterialized(Int32 globalMetaType, Object instance)</summary>
        </member>
    </members>
</doc>
